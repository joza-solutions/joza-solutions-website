"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[411],{3608:function(e,t,n){n.d(t,{Bi:function(){return M},JA:function(){return tV}});var i,r,a=n(9631),o=n(2265),s=n(7437),l=n(6376),c=n(2930),d=n(2470),u=Object.create,h=Object.defineProperty,f=Object.defineProperties,m=Object.getOwnPropertyDescriptor,g=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertyNames,v=Object.getOwnPropertySymbols,_=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty,x=Object.prototype.propertyIsEnumerable,E=(e,t,n)=>t in e?h(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,b=(e,t)=>{for(var n in t||(t={}))y.call(t,n)&&E(e,n,t[n]);if(v)for(var n of v(t))x.call(t,n)&&E(e,n,t[n]);return e},T=(e,t)=>f(e,g(t)),z=(e,t)=>{var n={};for(var i in e)y.call(e,i)&&0>t.indexOf(i)&&(n[i]=e[i]);if(null!=e&&v)for(var i of v(e))0>t.indexOf(i)&&x.call(e,i)&&(n[i]=e[i]);return n},P=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),C=(e,t)=>{for(var n in t)h(e,n,{get:t[n],enumerable:!0})},S=(e,t,n)=>new Promise((i,r)=>{var a=e=>{try{s(n.next(e))}catch(e){r(e)}},o=e=>{try{s(n.throw(e))}catch(e){r(e)}},s=e=>e.done?i(e.value):Promise.resolve(e.value).then(a,o);s((n=n.apply(e,t)).next())}),w=P((e,t)=>{t.exports=e=>encodeURIComponent(e).replace(/[!'()*]/g,e=>"%".concat(e.charCodeAt(0).toString(16).toUpperCase()))}),O=P((e,t)=>{var n="%[a-f0-9]{2}",i=RegExp("("+n+")|([^%]+?)","gi"),r=RegExp("("+n+")+","gi");t.exports=function(e){if("string"!=typeof e)throw TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof e+"`");try{return e=e.replace(/\+/g," "),decodeURIComponent(e)}catch(t){return function(e){for(var t={"%FE%FF":"��","%FF%FE":"��"},n=r.exec(e);n;){try{t[n[0]]=decodeURIComponent(n[0])}catch(e){var a=function(e){try{return decodeURIComponent(e)}catch(r){for(var t=e.match(i)||[],n=1;n<t.length;n++)t=(e=(function e(t,n){try{return[decodeURIComponent(t.join(""))]}catch(e){}if(1===t.length)return t;n=n||1;var i=t.slice(0,n),r=t.slice(n);return Array.prototype.concat.call([],e(i),e(r))})(t,n).join("")).match(i)||[];return e}}(n[0]);a!==n[0]&&(t[n[0]]=a)}n=r.exec(e)}t["%C2"]="�";for(var o=Object.keys(t),s=0;s<o.length;s++){var l=o[s];e=e.replace(RegExp(l,"g"),t[l])}return e}(e)}}}),A=P((e,t)=>{t.exports=(e,t)=>{if(!("string"==typeof e&&"string"==typeof t))throw TypeError("Expected the arguments to be of type `string`");if(""===t)return[e];let n=e.indexOf(t);return -1===n?[e]:[e.slice(0,n),e.slice(n+t.length)]}}),L=P((e,t)=>{t.exports=function(e,t){for(var n={},i=Object.keys(e),r=Array.isArray(t),a=0;a<i.length;a++){var o=i[a],s=e[o];(r?-1!==t.indexOf(o):t(o,s,e))&&(n[o]=s)}return n}}),D=P(e=>{var t=w(),n=O(),i=A(),r=L(),a=e=>null==e,o=Symbol("encodeFragmentIdentifier");function s(e){if("string"!=typeof e||1!==e.length)throw TypeError("arrayFormatSeparator must be single character string")}function l(e,n){return n.encode?n.strict?t(e):encodeURIComponent(e):e}function c(e,t){return t.decode?n(e):e}function d(e){let t=e.indexOf("#");return -1!==t&&(e=e.slice(0,t)),e}function u(e){let t=(e=d(e)).indexOf("?");return -1===t?"":e.slice(t+1)}function h(e,t){return t.parseNumbers&&!Number.isNaN(Number(e))&&"string"==typeof e&&""!==e.trim()?e=Number(e):t.parseBooleans&&null!==e&&("true"===e.toLowerCase()||"false"===e.toLowerCase())&&(e="true"===e.toLowerCase()),e}function f(e,t){s((t=Object.assign({decode:!0,sort:!0,arrayFormat:"none",arrayFormatSeparator:",",parseNumbers:!1,parseBooleans:!1},t)).arrayFormatSeparator);let n=function(e){let t;switch(e.arrayFormat){case"index":return(e,n,i)=>{if(t=/\[(\d*)\]$/.exec(e),e=e.replace(/\[\d*\]$/,""),!t){i[e]=n;return}void 0===i[e]&&(i[e]={}),i[e][t[1]]=n};case"bracket":return(e,n,i)=>{if(t=/(\[\])$/.exec(e),e=e.replace(/\[\]$/,""),!t){i[e]=n;return}if(void 0===i[e]){i[e]=[n];return}i[e]=[].concat(i[e],n)};case"colon-list-separator":return(e,n,i)=>{if(t=/(:list)$/.exec(e),e=e.replace(/:list$/,""),!t){i[e]=n;return}if(void 0===i[e]){i[e]=[n];return}i[e]=[].concat(i[e],n)};case"comma":case"separator":return(t,n,i)=>{let r="string"==typeof n&&n.includes(e.arrayFormatSeparator),a="string"==typeof n&&!r&&c(n,e).includes(e.arrayFormatSeparator);n=a?c(n,e):n;let o=r||a?n.split(e.arrayFormatSeparator).map(t=>c(t,e)):null===n?n:c(n,e);i[t]=o};case"bracket-separator":return(t,n,i)=>{let r=/(\[\])$/.test(t);if(t=t.replace(/\[\]$/,""),!r){i[t]=n&&c(n,e);return}let a=null===n?[]:n.split(e.arrayFormatSeparator).map(t=>c(t,e));if(void 0===i[t]){i[t]=a;return}i[t]=[].concat(i[t],a)};default:return(e,t,n)=>{if(void 0===n[e]){n[e]=t;return}n[e]=[].concat(n[e],t)}}}(t),r=Object.create(null);if("string"!=typeof e||!(e=e.trim().replace(/^[?#&]/,"")))return r;for(let a of e.split("&")){if(""===a)continue;let[e,o]=i(t.decode?a.replace(/\+/g," "):a,"=");o=void 0===o?null:["comma","separator","bracket-separator"].includes(t.arrayFormat)?o:c(o,t),n(c(e,t),o,r)}for(let e of Object.keys(r)){let n=r[e];if("object"==typeof n&&null!==n)for(let e of Object.keys(n))n[e]=h(n[e],t);else r[e]=h(n,t)}return!1===t.sort?r:(!0===t.sort?Object.keys(r).sort():Object.keys(r).sort(t.sort)).reduce((e,t)=>{let n=r[t];return n&&"object"==typeof n&&!Array.isArray(n)?e[t]=function e(t){return Array.isArray(t)?t.sort():"object"==typeof t?e(Object.keys(t)).sort((e,t)=>Number(e)-Number(t)).map(e=>t[e]):t}(n):e[t]=n,e},Object.create(null))}e.extract=u,e.parse=f,e.stringify=(e,t)=>{if(!e)return"";s((t=Object.assign({encode:!0,strict:!0,arrayFormat:"none",arrayFormatSeparator:","},t)).arrayFormatSeparator);let n=n=>t.skipNull&&a(e[n])||t.skipEmptyString&&""===e[n],i=function(e){switch(e.arrayFormat){case"index":return t=>(n,i)=>{let r=n.length;return void 0===i||e.skipNull&&null===i||e.skipEmptyString&&""===i?n:null===i?[...n,[l(t,e),"[",r,"]"].join("")]:[...n,[l(t,e),"[",l(r,e),"]=",l(i,e)].join("")]};case"bracket":return t=>(n,i)=>void 0===i||e.skipNull&&null===i||e.skipEmptyString&&""===i?n:null===i?[...n,[l(t,e),"[]"].join("")]:[...n,[l(t,e),"[]=",l(i,e)].join("")];case"colon-list-separator":return t=>(n,i)=>void 0===i||e.skipNull&&null===i||e.skipEmptyString&&""===i?n:null===i?[...n,[l(t,e),":list="].join("")]:[...n,[l(t,e),":list=",l(i,e)].join("")];case"comma":case"separator":case"bracket-separator":{let t="bracket-separator"===e.arrayFormat?"[]=":"=";return n=>(i,r)=>void 0===r||e.skipNull&&null===r||e.skipEmptyString&&""===r?i:(r=null===r?"":r,0===i.length?[[l(n,e),t,l(r,e)].join("")]:[[i,l(r,e)].join(e.arrayFormatSeparator)])}default:return t=>(n,i)=>void 0===i||e.skipNull&&null===i||e.skipEmptyString&&""===i?n:null===i?[...n,l(t,e)]:[...n,[l(t,e),"=",l(i,e)].join("")]}}(t),r={};for(let t of Object.keys(e))n(t)||(r[t]=e[t]);let o=Object.keys(r);return!1!==t.sort&&o.sort(t.sort),o.map(n=>{let r=e[n];return void 0===r?"":null===r?l(n,t):Array.isArray(r)?0===r.length&&"bracket-separator"===t.arrayFormat?l(n,t)+"[]":r.reduce(i(n),[]).join("&"):l(n,t)+"="+l(r,t)}).filter(e=>e.length>0).join("&")},e.parseUrl=(e,t)=>{t=Object.assign({decode:!0},t);let[n,r]=i(e,"#");return Object.assign({url:n.split("?")[0]||"",query:f(u(e),t)},t&&t.parseFragmentIdentifier&&r?{fragmentIdentifier:c(r,t)}:{})},e.stringifyUrl=(t,n)=>{var i;let r,a;n=Object.assign({encode:!0,strict:!0,[o]:!0},n);let s=d(t.url).split("?")[0]||"",c=e.extract(t.url),u=Object.assign(e.parse(c,{sort:!1}),t.query),h=e.stringify(u,n);h&&(h="?".concat(h));let f=(i=t.url,r="",-1!==(a=i.indexOf("#"))&&(r=i.slice(a)),r);return t.fragmentIdentifier&&(f="#".concat(n[o]?l(t.fragmentIdentifier,n):t.fragmentIdentifier)),"".concat(s).concat(h).concat(f)},e.pick=(t,n,i)=>{i=Object.assign({parseFragmentIdentifier:!0,[o]:!1},i);let{url:a,query:s,fragmentIdentifier:l}=e.parseUrl(t,i);return e.stringifyUrl({url:a,query:r(s,n),fragmentIdentifier:l},i)},e.exclude=(t,n,i)=>{let r=Array.isArray(n)?e=>!n.includes(e):(e,t)=>!n(e,t);return e.pick(t,r,i)}}),R=(e,t)=>({dpr:e,camera:{fov:t},linear:!0,flat:!0,gl:{preserveDrawingBuffer:!0}}),F={zoom:1,distance:14},N={zoom:5,distance:14},U="https://ruucm.github.io/shadergradient/shadergradient@1.0.0/hdr/";function I(e){let{title:t="",color1:n="#ff7e5f",color2:i="#feb47b"}=e;return(0,s.jsx)("div",{style:{width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",background:"linear-gradient(to right, ".concat(n,", ").concat(i,")"),color:"white",fontSize:"20px",textAlign:"center",padding:"20px",fontFamily:"Inter",fontWeight:"500"},children:(0,s.jsx)("p",{children:t})})}function M(e){var{children:t,pointerEvents:n="none",pixelDensity:i=1,fov:r=45}=e,l=z(e,["children","pointerEvents","pixelDensity","fov"]);let[c,d]=function(){let[e,t]=(0,o.useState)(-1);return[e,e=>{let n=e.gl.domElement,i=e=>{e.preventDefault(),t(1),console.log("[Context Lost]")},r=e=>{t(0),console.log("[Context Restored]")},a=e=>{t(2),console.log("[Context Error]")};return n.addEventListener("webglcontextlost",i),n.addEventListener("webglcontextrestored",r),n.addEventListener("webglcontextcreationerror",a),()=>{n.removeEventListener("webglcontextlost",i),n.removeEventListener("webglcontextrestored",r),n.removeEventListener("webglcontextcreationerror",a)}}]}();return 1===c?(0,s.jsx)(I,{title:"The graphics context has been lost. Please wait while we try to restore it..."}):(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(a.Canvas,T(b(T(b({id:"gradientCanvas",resize:{offsetSize:!0}},R(i,r)),{style:{pointerEvents:n},onCreated:d}),l),{children:t}),i+r)})}var k=class{setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}constructor(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}},H=new l.OrthographicCamera(-1,1,1,-1,0,1),j=new l.BufferGeometry;j.setAttribute("position",new l.Float32BufferAttribute([-1,3,0,-1,-1,0,3,-1,0],3)),j.setAttribute("uv",new l.Float32BufferAttribute([0,2,0,0,2,0],2));var B=class{dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,H)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}constructor(e){this._mesh=new l.Mesh(j,e)}},Y=class extends k{render(e,t,n){let i,r,a=e.getContext(),o=e.state;o.buffers.color.setMask(!1),o.buffers.depth.setMask(!1),o.buffers.color.setLocked(!0),o.buffers.depth.setLocked(!0),this.inverse?(i=0,r=1):(i=1,r=0),o.buffers.stencil.setTest(!0),o.buffers.stencil.setOp(a.REPLACE,a.REPLACE,a.REPLACE),o.buffers.stencil.setFunc(a.ALWAYS,i,4294967295),o.buffers.stencil.setClear(r),o.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),o.buffers.color.setLocked(!1),o.buffers.depth.setLocked(!1),o.buffers.stencil.setLocked(!1),o.buffers.stencil.setFunc(a.EQUAL,1,4294967295),o.buffers.stencil.setOp(a.KEEP,a.KEEP,a.KEEP),o.buffers.stencil.setLocked(!0)}constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}},V=class extends k{render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}constructor(){super(),this.needsSwap=!1}},G=class extends k{render(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?e.setRenderTarget(null):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil)),this.fsQuad.render(e)}constructor(e,t){super(),this.textureID=void 0!==t?t:"tDiffuse",e instanceof l.ShaderMaterial?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=l.UniformsUtils.clone(e.uniforms),this.material=new l.ShaderMaterial({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new B(this.material)}},q={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n\n		varying vec2 vUv;\n\n		void main() {\n\n			vUv = uv;\n			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n		}",fragmentShader:"\n\n		uniform float opacity;\n\n		uniform sampler2D tDiffuse;\n\n		varying vec2 vUv;\n\n		void main() {\n\n			vec4 texel = texture2D( tDiffuse, vUv );\n			gl_FragColor = opacity * texel;\n\n		}"},Z=class{swapBuffers(){let e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){let t=this.passes.indexOf(e);-1!==t&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){void 0===e&&(e=this.clock.getDelta());let t=this.renderer.getRenderTarget(),n=!1;for(let t=0,i=this.passes.length;t<i;t++){let i=this.passes[t];if(!1!==i.enabled){if(i.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(t),i.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),i.needsSwap){if(n){let t=this.renderer.getContext(),n=this.renderer.state.buffers.stencil;n.setFunc(t.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),n.setFunc(t.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==Y&&(i instanceof Y?n=!0:i instanceof V&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(void 0===e){let t=this.renderer.getSize(new l.Vector2);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,(e=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;let n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(n,i),this.renderTarget2.setSize(n,i);for(let e=0;e<this.passes.length;e++)this.passes[e].setSize(n,i)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}constructor(e,t){if(this.renderer=e,void 0===t){let n={minFilter:l.LinearFilter,magFilter:l.LinearFilter,format:l.RGBAFormat},i=e.getSize(new l.Vector2);this._pixelRatio=e.getPixelRatio(),this._width=i.width,this._height=i.height,(t=new l.WebGLRenderTarget(this._width*this._pixelRatio,this._height*this._pixelRatio,n)).texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===q&&console.error("THREE.EffectComposer relies on CopyShader"),void 0===G&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new G(q),this.clock=new l.Clock}};new l.OrthographicCamera(-1,1,1,-1,0,1);var X=new l.BufferGeometry;X.setAttribute("position",new l.Float32BufferAttribute([-1,3,0,-1,-1,0,3,-1,0],3)),X.setAttribute("uv",new l.Float32BufferAttribute([0,2,0,0,2,0],2));var Q=class extends k{render(e,t,n){let i,r,a=e.autoClear;e.autoClear=!1,void 0!==this.overrideMaterial&&(r=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),i=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,i),void 0!==this.overrideMaterial&&(this.scene.overrideMaterial=r),e.autoClear=a}constructor(e,t,n,i,r){super(),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=i,this.clearAlpha=void 0!==r?r:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new l.Color}},K={SKIP:0,ADD:1,ALPHA:2,AVERAGE:3,COLOR_BURN:4,COLOR_DODGE:5,DARKEN:6,DIFFERENCE:7,EXCLUSION:8,LIGHTEN:9,MULTIPLY:10,DIVIDE:11,NEGATION:12,NORMAL:13,OVERLAY:14,REFLECT:15,SCREEN:16,SOFT_LIGHT:17,SUBTRACT:18},W=new Map([[K.SKIP,null],[K.ADD,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return min(x+y,1.0)*opacity+x*(1.0-opacity);}"],[K.ALPHA,"vec3 blend(const in vec3 x,const in vec3 y,const in float opacity){return y*opacity+x*(1.0-opacity);}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){float a=min(y.a,opacity);return vec4(blend(x.rgb,y.rgb,a),max(x.a,a));}"],[K.AVERAGE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return(x+y)*0.5*opacity+x*(1.0-opacity);}"],[K.COLOR_BURN,"float blend(const in float x,const in float y){return(y==0.0)?y:max(1.0-(1.0-x)/y,0.0);}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}"],[K.COLOR_DODGE,"float blend(const in float x,const in float y){return(y==1.0)?y:min(x/(1.0-y),1.0);}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}"],[K.DARKEN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return min(x,y)*opacity+x*(1.0-opacity);}"],[K.DIFFERENCE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return abs(x-y)*opacity+x*(1.0-opacity);}"],[K.EXCLUSION,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return(x+y-2.0*x*y)*opacity+x*(1.0-opacity);}"],[K.LIGHTEN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return max(x,y)*opacity+x*(1.0-opacity);}"],[K.MULTIPLY,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return x*y*opacity+x*(1.0-opacity);}"],[K.DIVIDE,"float blend(const in float x,const in float y){return(y>0.0)?min(x/y,1.0):1.0;}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}"],[K.NEGATION,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return(1.0-abs(1.0-x-y))*opacity+x*(1.0-opacity);}"],[K.NORMAL,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return y*opacity+x*(1.0-opacity);}"],[K.OVERLAY,"float blend(const in float x,const in float y){return(x<0.5)?(2.0*x*y):(1.0-2.0*(1.0-x)*(1.0-y));}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}"],[K.REFLECT,"float blend(const in float x,const in float y){return(y==1.0)?y:min(x*x/(1.0-y),1.0);}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}"],[K.SCREEN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return(1.0-(1.0-x)*(1.0-y))*opacity+x*(1.0-opacity);}"],[K.SOFT_LIGHT,"float blend(const in float x,const in float y){return(y<0.5)?(2.0*x*y+x*x*(1.0-2.0*y)):(sqrt(x)*(2.0*y-1.0)+2.0*x*(1.0-y));}vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=vec4(blend(x.r,y.r),blend(x.g,y.g),blend(x.b,y.b),blend(x.a,y.a));return z*opacity+x*(1.0-opacity);}"],[K.SUBTRACT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return max(x+y-1.0,0.0)*opacity+x*(1.0-opacity);}"]]),$=class extends l.EventDispatcher{getBlendFunction(){return this.blendFunction}setBlendFunction(e){this.blendFunction=e,this.dispatchEvent({type:"change"})}getShaderCode(){return W.get(this.blendFunction)}constructor(e,t=1){super(),this.blendFunction=e,this.opacity=new l.Uniform(t)}},J={uniforms:{tDiffuse:{value:null},shape:{value:1},radius:{value:2},rotateR:{value:Math.PI/12*1},rotateG:{value:Math.PI/12*2},rotateB:{value:Math.PI/12*3},scatter:{value:1},width:{value:20},height:{value:20},blending:{value:1},blendingMode:{value:1},greyscale:{value:!1},disable:{value:!1}},vertexShader:"\n\n		varying vec2 vUV;\n		varying vec3 vPosition;\n\n		void main() {\n\n			vUV = uv;\n			vPosition = position;\n\n			gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\n		}",fragmentShader:"\n\n		#define SQRT2_MINUS_ONE 0.41421356\n		#define SQRT2_HALF_MINUS_ONE 0.20710678\n		#define PI2 6.28318531\n		#define SHAPE_DOT 1\n		#define SHAPE_ELLIPSE 2\n		#define SHAPE_LINE 3\n		#define SHAPE_SQUARE 4\n		#define BLENDING_LINEAR 1\n		#define BLENDING_MULTIPLY 2\n		#define BLENDING_ADD 3\n		#define BLENDING_LIGHTER 4\n		#define BLENDING_DARKER 5\n		uniform sampler2D tDiffuse;\n		uniform float radius;\n		uniform float rotateR;\n		uniform float rotateG;\n		uniform float rotateB;\n		uniform float scatter;\n		uniform float width;\n		uniform float height;\n		uniform int shape;\n		uniform bool disable;\n		uniform float blending;\n		uniform int blendingMode;\n		varying vec2 vUV;\n		varying vec3 vPosition;\n		uniform bool greyscale;\n		const int samples = 8;\n\n		float blend( float a, float b, float t ) {\n\n		// linear blend\n			return a * ( 1.0 - t ) + b * t;\n\n		}\n\n		float hypot( float x, float y ) {\n\n		// vector magnitude\n			return sqrt( x * x + y * y );\n\n		}\n\n		float rand( vec2 seed ){\n\n		// get pseudo-random number\n			return fract( sin( dot( seed.xy, vec2( 12.9898, 78.233 ) ) ) * 43758.5453 );\n\n		}\n\n		float distanceToDotRadius( float channel, vec2 coord, vec2 normal, vec2 p, float angle, float rad_max ) {\n\n		// apply shape-specific transforms\n			float dist = hypot( coord.x - p.x, coord.y - p.y );\n			float rad = channel;\n\n			if ( shape == SHAPE_DOT ) {\n\n				rad = pow( abs( rad ), 1.125 ) * rad_max;\n\n			} else if ( shape == SHAPE_ELLIPSE ) {\n\n				rad = pow( abs( rad ), 1.125 ) * rad_max;\n\n				if ( dist != 0.0 ) {\n					float dot_p = abs( ( p.x - coord.x ) / dist * normal.x + ( p.y - coord.y ) / dist * normal.y );\n					dist = ( dist * ( 1.0 - SQRT2_HALF_MINUS_ONE ) ) + dot_p * dist * SQRT2_MINUS_ONE;\n				}\n\n			} else if ( shape == SHAPE_LINE ) {\n\n				rad = pow( abs( rad ), 1.5) * rad_max;\n				float dot_p = ( p.x - coord.x ) * normal.x + ( p.y - coord.y ) * normal.y;\n				dist = hypot( normal.x * dot_p, normal.y * dot_p );\n\n			} else if ( shape == SHAPE_SQUARE ) {\n\n				float theta = atan( p.y - coord.y, p.x - coord.x ) - angle;\n				float sin_t = abs( sin( theta ) );\n				float cos_t = abs( cos( theta ) );\n				rad = pow( abs( rad ), 1.4 );\n				rad = rad_max * ( rad + ( ( sin_t > cos_t ) ? rad - sin_t * rad : rad - cos_t * rad ) );\n\n			}\n\n			return rad - dist;\n\n		}\n\n		struct Cell {\n\n		// grid sample positions\n			vec2 normal;\n			vec2 p1;\n			vec2 p2;\n			vec2 p3;\n			vec2 p4;\n			float samp2;\n			float samp1;\n			float samp3;\n			float samp4;\n\n		};\n\n		vec4 getSample( vec2 point ) {\n\n		// multi-sampled point\n			vec4 tex = texture2D( tDiffuse, vec2( point.x / width, point.y / height ) );\n			float base = rand( vec2( floor( point.x ), floor( point.y ) ) ) * PI2;\n			float step = PI2 / float( samples );\n			// float dist = radius * 0.66;\n			float dist = radius * 0.0;\n\n			for ( int i = 0; i < samples; ++i ) {\n\n				float r = base + step * float( i );\n				vec2 coord = point + vec2( cos( r ) * dist, sin( r ) * dist );\n				tex += texture2D( tDiffuse, vec2( coord.x / width, coord.y / height ) );\n\n			}\n\n			tex /= float( samples ) + 1.0;\n			return tex;\n\n		}\n\n		float getDotColour( Cell c, vec2 p, int channel, float angle, float aa ) {\n\n		// get colour for given point\n			float dist_c_1, dist_c_2, dist_c_3, dist_c_4, res;\n\n			if ( channel == 0 ) {\n\n				c.samp1 = getSample( c.p1 ).r;\n				c.samp2 = getSample( c.p2 ).r;\n				c.samp3 = getSample( c.p3 ).r;\n				c.samp4 = getSample( c.p4 ).r;\n\n			} else if (channel == 1) {\n\n				c.samp1 = getSample( c.p1 ).g;\n				c.samp2 = getSample( c.p2 ).g;\n				c.samp3 = getSample( c.p3 ).g;\n				c.samp4 = getSample( c.p4 ).g;\n\n			} else {\n\n				c.samp1 = getSample( c.p1 ).b;\n				c.samp3 = getSample( c.p3 ).b;\n				c.samp2 = getSample( c.p2 ).b;\n				c.samp4 = getSample( c.p4 ).b;\n\n			}\n\n			dist_c_1 = distanceToDotRadius( c.samp1, c.p1, c.normal, p, angle, radius );\n			dist_c_2 = distanceToDotRadius( c.samp2, c.p2, c.normal, p, angle, radius );\n			dist_c_3 = distanceToDotRadius( c.samp3, c.p3, c.normal, p, angle, radius );\n			dist_c_4 = distanceToDotRadius( c.samp4, c.p4, c.normal, p, angle, radius );\n			res = ( dist_c_1 > 0.0 ) ? clamp( dist_c_1 / aa, 0.0, 1.0 ) : 0.0;\n			// res = 0.0;\n			res += ( dist_c_2 > 0.0 ) ? clamp( dist_c_2 / aa, 0.0, 1.0 ) : 0.0;\n			res += ( dist_c_3 > 0.0 ) ? clamp( dist_c_3 / aa, 0.0, 1.0 ) : 0.0;\n			res += ( dist_c_4 > 0.0 ) ? clamp( dist_c_4 / aa, 0.0, 1.0 ) : 0.0;\n			res = clamp( res, 0.0, 1.0 );\n\n			return res;\n			// return 2\n\n		}\n\n		Cell getReferenceCell( vec2 p, vec2 origin, float grid_angle, float step ) {\n\n		// get containing cell\n			Cell c;\n\n		// calc grid\n			vec2 n = vec2( cos( grid_angle ), sin( grid_angle ) );\n			float threshold = step * 0.5;\n			float dot_normal = n.x * ( p.x - origin.x ) + n.y * ( p.y - origin.y );\n			float dot_line = -n.y * ( p.x - origin.x ) + n.x * ( p.y - origin.y );\n			vec2 offset = vec2( n.x * dot_normal, n.y * dot_normal );\n			float offset_normal = mod( hypot( offset.x, offset.y ), step );\n			float normal_dir = ( dot_normal < 0.0 ) ? 1.0 : -1.0;\n			float normal_scale = ( ( offset_normal < threshold ) ? -offset_normal : step - offset_normal ) * normal_dir;\n			float offset_line = mod( hypot( ( p.x - offset.x ) - origin.x, ( p.y - offset.y ) - origin.y ), step );\n			float line_dir = ( dot_line < 0.0 ) ? 1.0 : -1.0;\n			float line_scale = ( ( offset_line < threshold ) ? -offset_line : step - offset_line ) * line_dir;\n\n		// get closest corner\n			c.normal = n;\n			c.p1.x = p.x - n.x * normal_scale + n.y * line_scale;\n			c.p1.y = p.y - n.y * normal_scale - n.x * line_scale;\n\n		// scatter\n			if ( scatter != 0.0 ) {\n\n				float off_mag = scatter * threshold * 0.5;\n				float off_angle = rand( vec2( floor( c.p1.x ), floor( c.p1.y ) ) ) * PI2;\n				c.p1.x += cos( off_angle ) * off_mag;\n				c.p1.y += sin( off_angle ) * off_mag;\n\n			}\n\n		// find corners\n			float normal_step = normal_dir * ( ( offset_normal < threshold ) ? step : -step );\n			float line_step = line_dir * ( ( offset_line < threshold ) ? step : -step );\n			c.p2.x = c.p1.x - n.x * normal_step;\n			c.p2.y = c.p1.y - n.y * normal_step;\n			c.p3.x = c.p1.x + n.y * line_step;\n			c.p3.y = c.p1.y - n.x * line_step;\n			c.p4.x = c.p1.x - n.x * normal_step + n.y * line_step;\n			c.p4.y = c.p1.y - n.y * normal_step - n.x * line_step;\n\n			return c;\n\n		}\n\n		float blendColour( float a, float b, float t ) {\n\n		// blend colours\n			if ( blendingMode == BLENDING_LINEAR ) {\n				return blend( a, b, 1.0 - t );\n			} else if ( blendingMode == BLENDING_ADD ) {\n				return blend( a, min( 1.0, a + b ), t );\n			} else if ( blendingMode == BLENDING_MULTIPLY ) {\n				return blend( a, max( 0.0, a * b ), t );\n			} else if ( blendingMode == BLENDING_LIGHTER ) {\n				return blend( a, max( a, b ), t );\n			} else if ( blendingMode == BLENDING_DARKER ) {\n				return blend( a, min( a, b ), t );\n			} else {\n				return blend( a, b, 1.0 - t );\n			}\n\n		}\n\n		void main() {\n\n			if ( ! disable ) {\n\n		// setup\n				vec2 p = vec2( vUV.x * width, vUV.y * height ) - vec2(vPosition.x, vPosition.y) * 3.0; // - position values to remove black borders.\n				vec2 origin = vec2( 0, 0 );\n				float aa = ( radius < 2.5 ) ? radius * 0.5 : 1.25;\n				// float aa = 0.0;\n\n		// get channel samples\n				Cell cell_r = getReferenceCell( p, origin, rotateR, radius );\n				Cell cell_g = getReferenceCell( p, origin, rotateG, radius );\n				Cell cell_b = getReferenceCell( p, origin, rotateB, radius );\n				float r = getDotColour( cell_r, p, 0, rotateR, aa );\n				float g = getDotColour( cell_g, p, 1, rotateG, aa );\n				float b = getDotColour( cell_b, p, 2, rotateB, aa );\n\n		// blend with original\n				vec4 colour = texture2D( tDiffuse, vUV );\n				\n				// add masking before blendColour\n				if (colour.r == 0.0) {\n					r = 0.0;\n				} else {\n					r = blendColour( r, colour.r, blending );\n				}\n\n				if (colour.g == 0.0) {\n					g = 0.0;\n				} else {\n					g = blendColour( g, colour.g, blending );\n				}\n\n				if (colour.b == 0.0) {\n					b = 0.0;\n				} else {\n					b = blendColour( b, colour.b, blending );\n				}\n				\n				\n				\n\n				if ( greyscale ) {\n					r = g = b = (r + b + g) / 3.0;\n				}\n\n				// add alpha channel to each r, g, b colors\n				vec4 vR;\n				vec4 vG;\n				vec4 vB;\n	\n				// apply transparent to outside of mesh\n				if (r == 0.0 && colour.r == 0.0) {\n					vR = vec4( 0, 0, 0, 0 );\n				} else {\n					vR = vec4( r, 0, 0, 1 );\n				}\n	\n				if (g == 0.0 && colour.g == 0.0) {\n					vG = vec4( 0, 0, 0, 0 );\n				} else {\n					vG = vec4( 0, g, 0, 1 );\n				}\n	\n				if (b == 0.0 && colour.b == 0.0) {\n					vB = vec4( 0, 0, 0, 0 );\n				} else {\n					vB = vec4( 0, 0, b, 1 );\n				}\n\n				// gl_FragColor = vec4( r, g, b, 1.0 );\n				gl_FragColor = vR + vG + vB;\n\n			} else {\n\n				gl_FragColor = texture2D( tDiffuse, vUV );\n\n			}\n\n		}"},ee=class{setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}constructor(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}},et=new l.OrthographicCamera(-1,1,1,-1,0,1),en=new l.BufferGeometry;en.setAttribute("position",new l.Float32BufferAttribute([-1,3,0,-1,-1,0,3,-1,0],3)),en.setAttribute("uv",new l.Float32BufferAttribute([0,2,0,0,2,0],2));var ei=class{dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,et)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}constructor(e){this._mesh=new l.Mesh(en,e)}},er=class extends ee{render(e,t,n){this.material.uniforms.tDiffuse.value=n.texture,this.renderToScreen?e.setRenderTarget(null):(e.setRenderTarget(t),this.clear&&e.clear()),this.fsQuad.render(e)}setSize(e,t){this.uniforms.width.value=e,this.uniforms.height.value=t}initialize(e,t,n){}addEventListener(){}getAttributes(){return this.attributes}getFragmentShader(){return J.fragmentShader}getVertexShader(){return J.vertexShader}update(e,t,n){}constructor(e,t,n){super(),void 0===J&&console.error("THREE.HalftonePass requires HalftoneShader"),this.uniforms=l.UniformsUtils.clone(J.uniforms),this.material=new l.ShaderMaterial({uniforms:this.uniforms,fragmentShader:J.fragmentShader,vertexShader:J.vertexShader}),this.uniforms.width.value=e,this.uniforms.height.value=t,this.uniforms.disable.value=n.disable,this.uniforms.blending.value=n.blending,this.fsQuad=new ei(this.material),this.blendMode=new $(K.SCREEN),this.extensions=null}},ea=e=>"function"==typeof e,eo=o.forwardRef((e,t)=>{var n,{envMap:i,resolution:r=256,frames:a=1/0,children:d,makeDefault:u}=e,h=z(e,["envMap","resolution","frames","children","makeDefault"]);let f=(0,c.A)(e=>{let{set:t}=e;return t}),m=(0,c.A)(e=>{let{camera:t}=e;return t}),g=(0,c.A)(e=>{let{size:t}=e;return t}),p=o.useRef(null),v=o.useRef(null),_=function(e,t,n){let{gl:i,size:r,viewport:a}=(0,c.A)(),s="number"==typeof e?e:r.width*a.dpr,d="number"==typeof t?t:r.height*a.dpr,u=("number"==typeof e?void 0:e)||{},{samples:h}=u,f=z(u,["samples"]),m=o.useMemo(()=>{let e;return(e=new l.WebGLRenderTarget(s,d,b({minFilter:l.LinearFilter,magFilter:l.LinearFilter,encoding:i.outputEncoding,type:l.HalfFloatType},f))).samples=h,e},[]);return o.useLayoutEffect(()=>{m.setSize(s,d),h&&(m.samples=h)},[h,m,s,d]),o.useEffect(()=>()=>m.dispose(),[]),m}(r);o.useLayoutEffect(()=>{h.manual||p.current.updateProjectionMatrix()},[g,h]),o.useLayoutEffect(()=>{p.current.updateProjectionMatrix()}),o.useLayoutEffect(()=>{if(u)return f(()=>({camera:p.current})),()=>f(()=>({camera:m}))},[p,u,f]);let y=0,x=null,E=ea(d);return(0,c.C)(e=>{E&&(a===1/0||y<a)&&(v.current.visible=!1,e.gl.setRenderTarget(_),x=e.scene.background,i&&(e.scene.background=i),e.gl.render(e.scene,p.current),e.scene.background=x,e.gl.setRenderTarget(null),v.current.visible=!0,y++)}),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("orthographicCamera",T(b({left:-(g.width/2),right:g.width/2,top:g.height/2,bottom:-(g.height/2),ref:(n=[p,t],function(e){n.forEach(function(t){"function"==typeof t?t(e):null!=t&&(t.current=e)})})},h),{children:!E&&d})),(0,s.jsx)("group",{ref:v,children:E&&d(_.texture)})]})}),es=o.createContext({}),el=()=>o.useContext(es),ec=2*Math.PI,ed=new l.Object3D,eu=new l.Matrix4,[eh,ef]=[new l.Quaternion,new l.Quaternion],em=new l.Vector3,eg=new l.Vector3,ep=e=>"minPolarAngle"in e,ev=e=>{let{alignment:t="bottom-right",margin:n=[80,80],renderPriority:i=0,autoClear:r=!0,onUpdate:a,onTarget:d,children:u}=e,h=(0,c.A)(e=>{let{size:t}=e;return t}),f=(0,c.A)(e=>{let{camera:t}=e;return t}),m=(0,c.A)(e=>{let{controls:t}=e;return t}),g=(0,c.A)(e=>{let{gl:t}=e;return t}),p=(0,c.A)(e=>{let{scene:t}=e;return t}),v=(0,c.A)(e=>{let{invalidate:t}=e;return t}),_=o.useRef(),y=o.useRef(),x=o.useRef(null),[E]=o.useState(()=>new l.Scene),b=o.useRef(!1),T=o.useRef(0),z=o.useRef(new l.Vector3(0,0,0)),P=o.useRef(new l.Vector3(0,0,0));o.useEffect(()=>{P.current.copy(f.up)},[f]);let C=o.useCallback(e=>{b.current=!0,(m||d)&&(z.current=(null==m?void 0:m.target)||(null==d?void 0:d())),T.current=f.position.distanceTo(em),eh.copy(f.quaternion),eg.copy(e).multiplyScalar(T.current).add(em),ed.lookAt(eg),ef.copy(ed.quaternion),v()},[m,f,d,v]);o.useEffect(()=>(p.background&&(_.current=p.background,p.background=null,E.background=_.current),()=>{_.current&&(p.background=_.current)}),[]),(0,c.C)((e,t)=>{var n;x.current&&y.current&&(b.current&&(.01>eh.angleTo(ef)?(b.current=!1,ep(m)&&f.up.copy(P.current)):(eh.rotateTowards(ef,t*ec),f.position.set(0,0,1).applyQuaternion(eh).multiplyScalar(T.current).add(z.current),f.up.set(0,1,0).applyQuaternion(eh).normalize(),f.quaternion.copy(eh),a?a():m&&m.update(),v())),eu.copy(f.matrix).invert(),null==(n=y.current)||n.quaternion.setFromRotationMatrix(eu),r&&(g.autoClear=!1),g.clearDepth(),g.render(E,x.current))},i);let S=function(e,t){let n=(0,c.A)(e=>e.pointer),[i]=o.useState(()=>{let i=new l.Raycaster;return t&&(0,c.j)(i,t,{}),function(t,r){i.setFromCamera(n,e instanceof l.Camera?e:e.current);let a=this.constructor.prototype.raycast.bind(this);a&&a(i,r)}});return i}(x),w=o.useMemo(()=>({tweenCamera:C,raycast:S}),[C]),[O,A]=n,L=t.endsWith("-center")?0:t.endsWith("-left")?-h.width/2+O:h.width/2-O,D=t.startsWith("center-")?0:t.startsWith("top-")?h.height/2-A:-h.height/2+A;return(0,c.g)((0,s.jsxs)(es.Provider,{value:w,children:[(0,s.jsx)(eo,{ref:x,position:[0,0,200]}),(0,s.jsx)("group",{ref:y,position:[L,D,0],children:u})]}),E)};function e_(e){let{scale:t=[.8,.05,.05],color:n,rotation:i}=e;return(0,s.jsx)("group",{rotation:i,children:(0,s.jsxs)("mesh",{position:[.4,0,0],children:[(0,s.jsx)("boxGeometry",{args:t}),(0,s.jsx)("meshBasicMaterial",{color:n,toneMapped:!1})]})})}function ey(e){var{onClick:t,font:n,disabled:i,arcStyle:r,label:a,labelColor:d,axisHeadScale:u=1}=e,h=z(e,["onClick","font","disabled","arcStyle","label","labelColor","axisHeadScale"]);let f=(0,c.A)(e=>e.gl),m=o.useMemo(()=>{let e=document.createElement("canvas");e.width=64,e.height=64;let t=e.getContext("2d");return t.beginPath(),t.arc(32,32,16,0,2*Math.PI),t.closePath(),t.fillStyle=r,t.fill(),a&&(t.font=n,t.textAlign="center",t.fillStyle=d,t.fillText(a,32,41)),new l.CanvasTexture(e)},[r,a,d,n]),[g,p]=o.useState(!1),v=(a?1:.75)*(g?1.2:1)*u;return(0,s.jsx)("sprite",T(b({scale:v,onPointerOver:i?void 0:e=>{e.stopPropagation(),p(!0)},onPointerOut:i?void 0:t||(e=>{e.stopPropagation(),p(!1)})},h),{children:(0,s.jsx)("spriteMaterial",{map:m,"map-encoding":f.outputEncoding,"map-anisotropy":f.capabilities.getMaxAnisotropy()||1,alphaTest:.3,opacity:a?1:.75,toneMapped:!1})}))}var ex=e=>{var{hideNegativeAxes:t,hideAxisHeads:n,disabled:i,font:r="18px Inter var, Arial, sans-serif",axisColors:a=["#ff2060","#20df80","#2080ff"],axisHeadScale:o=1,axisScale:l,labels:c=["X","Y","Z"],labelColor:d="#000",onClick:u}=e,h=z(e,["hideNegativeAxes","hideAxisHeads","disabled","font","axisColors","axisHeadScale","axisScale","labels","labelColor","onClick"]);let[f,m,g]=a,{tweenCamera:p,raycast:v}=el(),_={font:r,disabled:i,labelColor:d,raycast:v,onClick:u,axisHeadScale:o,onPointerDown:i?void 0:e=>{p(e.object.position),e.stopPropagation()}};return(0,s.jsxs)("group",T(b({scale:40},h),{children:[(0,s.jsx)(e_,{color:f,rotation:[0,0,0],scale:l}),(0,s.jsx)(e_,{color:m,rotation:[0,0,Math.PI/2],scale:l}),(0,s.jsx)(e_,{color:g,rotation:[0,-Math.PI/2,0],scale:l}),!n&&(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(ey,b({arcStyle:f,position:[1,0,0],label:c[0]},_)),(0,s.jsx)(ey,b({arcStyle:m,position:[0,1,0],label:c[1]},_)),(0,s.jsx)(ey,b({arcStyle:g,position:[0,0,1],label:c[2]},_)),!t&&(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(ey,b({arcStyle:f,position:[-1,0,0]},_)),(0,s.jsx)(ey,b({arcStyle:m,position:[0,-1,0]},_)),(0,s.jsx)(ey,b({arcStyle:g,position:[0,0,-1]},_))]})]}),(0,s.jsx)("ambientLight",{intensity:.5}),(0,s.jsx)("pointLight",{position:[10,10,10],intensity:.5})]}))};function eE(e){let{isFigmaPlugin:t}=e;return(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(ev,{alignment:"bottom-right",margin:t?[25,25]:[65,110],renderPriority:2,children:(0,s.jsx)(ex,{axisColors:["#FF430A","#FF430A","#FF430A"],labelColor:"white",hideNegativeAxes:!0,axisHeadScale:.8})})})}var eb={LEFT:1,RIGHT:2,MIDDLE:4},eT=Object.freeze({NONE:0,ROTATE:1,TRUCK:2,OFFSET:4,DOLLY:8,ZOOM:16,TOUCH_ROTATE:32,TOUCH_TRUCK:64,TOUCH_OFFSET:128,TOUCH_DOLLY:256,TOUCH_ZOOM:512,TOUCH_DOLLY_TRUCK:1024,TOUCH_DOLLY_OFFSET:2048,TOUCH_DOLLY_ROTATE:4096,TOUCH_ZOOM_TRUCK:8192,TOUCH_ZOOM_OFFSET:16384,TOUCH_ZOOM_ROTATE:32768});function ez(e){return e.isPerspectiveCamera}function eP(e){return e.isOrthographicCamera}var eC=2*Math.PI,eS=Math.PI/2;function ew(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e-5;return Math.abs(e)<t}function eO(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1e-5;return ew(e-t,n)}function eA(e,t){return Math.round(e/t)*t}function eL(e){return isFinite(e)?e:e<0?-Number.MAX_VALUE:Number.MAX_VALUE}function eD(e){return Math.abs(e)<Number.MAX_VALUE?e:1/0*e}function eR(e,t){t.set(0,0),e.forEach(e=>{t.x+=e.clientX,t.y+=e.clientY}),t.x/=e.length,t.y/=e.length}function eF(e,t){return!!eP(e)&&(console.warn("".concat(t," is not supported in OrthographicCamera")),!0)}function eN(e){return e.invert?e.invert():e.inverse(),e}var eU,eI,eM,ek,eH,ej,eB,eY,eV,eG,eq,eZ,eX,eQ,eK,eW,e$,eJ,e0,e1,e3,e2,e4=class{addEventListener(e,t){let n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}removeEventListener(e,t){let n=this._listeners[e];if(void 0!==n){let e=n.indexOf(t);-1!==e&&n.splice(e,1)}}removeAllEventListeners(e){if(!e){this._listeners={};return}Array.isArray(this._listeners[e])&&(this._listeners[e].length=0)}dispatchEvent(e){let t=this._listeners[e.type];if(void 0!==t){e.target=this;let n=t.slice(0);for(let t=0,i=n.length;t<i;t++)n[t].call(this,e)}}constructor(){this._listeners={}}},e5="undefined"!=typeof window,e8=e5&&/Mac/.test(navigator.platform),e9=!(e5&&"PointerEvent"in window),e7=1/8,e6=class extends e4{static install(e){eI=Object.freeze(new(eU=e.THREE).Vector3(0,0,0)),eM=Object.freeze(new eU.Vector3(0,1,0)),ek=Object.freeze(new eU.Vector3(0,0,1)),eH=new eU.Vector2,ej=new eU.Vector3,eB=new eU.Vector3,eY=new eU.Vector3,eV=new eU.Vector3,eG=new eU.Vector3,eq=new eU.Vector3,eZ=new eU.Vector3,eX=new eU.Vector3,eQ=new eU.Spherical,eK=new eU.Spherical,eW=new eU.Box3,e$=new eU.Box3,eJ=new eU.Sphere,e0=new eU.Quaternion,e1=new eU.Quaternion,e3=new eU.Matrix4,e2=new eU.Raycaster}static get ACTION(){return eT}get camera(){return this._camera}set camera(e){this._camera=e,this.updateCameraUp(),this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0}get enabled(){return this._enabled}set enabled(e){this._enabled=e,e?(this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none"):(this.cancel(),this._domElement.style.touchAction="",this._domElement.style.userSelect="",this._domElement.style.webkitUserSelect="")}get active(){return!this._hasRested}get currentAction(){return this._state}get distance(){return this._spherical.radius}set distance(e){this._spherical.radius===e&&this._sphericalEnd.radius===e||(this._spherical.radius=e,this._sphericalEnd.radius=e,this._needsUpdate=!0)}get azimuthAngle(){return this._spherical.theta}set azimuthAngle(e){this._spherical.theta===e&&this._sphericalEnd.theta===e||(this._spherical.theta=e,this._sphericalEnd.theta=e,this._needsUpdate=!0)}get polarAngle(){return this._spherical.phi}set polarAngle(e){this._spherical.phi===e&&this._sphericalEnd.phi===e||(this._spherical.phi=e,this._sphericalEnd.phi=e,this._needsUpdate=!0)}get boundaryEnclosesCamera(){return this._boundaryEnclosesCamera}set boundaryEnclosesCamera(e){this._boundaryEnclosesCamera=e,this._needsUpdate=!0}addEventListener(e,t){super.addEventListener(e,t)}removeEventListener(e,t){super.removeEventListener(e,t)}rotate(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return this.rotateTo(this._sphericalEnd.theta+e,this._sphericalEnd.phi+t,n)}rotateAzimuthTo(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.rotateTo(e,this._sphericalEnd.phi,t)}rotatePolarTo(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.rotateTo(this._sphericalEnd.theta,e,t)}rotateTo(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=eU.MathUtils.clamp(e,this.minAzimuthAngle,this.maxAzimuthAngle),r=eU.MathUtils.clamp(t,this.minPolarAngle,this.maxPolarAngle);this._sphericalEnd.theta=i,this._sphericalEnd.phi=r,this._sphericalEnd.makeSafe(),this._needsUpdate=!0,n||(this._spherical.theta=this._sphericalEnd.theta,this._spherical.phi=this._sphericalEnd.phi);let a=!n||eO(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&eO(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold);return this._createOnRestPromise(a)}dolly(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.dollyTo(this._sphericalEnd.radius-e,t)}dollyTo(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=this._sphericalEnd.radius,i=eU.MathUtils.clamp(e,this.minDistance,this.maxDistance);if(this.colliderMeshes.length>=1){let e=this._collisionTest(),t=eO(e,this._spherical.radius);if(!(n>i)&&t)return Promise.resolve();this._sphericalEnd.radius=Math.min(i,e)}else this._sphericalEnd.radius=i;this._needsUpdate=!0,t||(this._spherical.radius=this._sphericalEnd.radius);let r=!t||eO(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(r)}zoom(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.zoomTo(this._zoomEnd+e,t)}zoomTo(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._zoomEnd=eU.MathUtils.clamp(e,this.minZoom,this.maxZoom),this._needsUpdate=!0,t||(this._zoom=this._zoomEnd);let n=!t||eO(this._zoom,this._zoomEnd,this.restThreshold);return this._createOnRestPromise(n)}pan(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return console.warn("`pan` has been renamed to `truck`"),this.truck(e,t,n)}truck(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._camera.updateMatrix(),eV.setFromMatrixColumn(this._camera.matrix,0),eG.setFromMatrixColumn(this._camera.matrix,1),eV.multiplyScalar(e),eG.multiplyScalar(-t);let i=ej.copy(eV).add(eG),r=eB.copy(this._targetEnd).add(i);return this.moveTo(r.x,r.y,r.z,n)}forward(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];ej.setFromMatrixColumn(this._camera.matrix,0),ej.crossVectors(this._camera.up,ej),ej.multiplyScalar(e);let n=eB.copy(this._targetEnd).add(ej);return this.moveTo(n.x,n.y,n.z,t)}moveTo(e,t,n){let i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=ej.set(e,t,n).sub(this._targetEnd);this._encloseToBoundary(this._targetEnd,r,this.boundaryFriction),this._needsUpdate=!0,i||this._target.copy(this._targetEnd);let a=!i||eO(this._target.x,this._targetEnd.x,this.restThreshold)&&eO(this._target.y,this._targetEnd.y,this.restThreshold)&&eO(this._target.z,this._targetEnd.z,this.restThreshold);return this._createOnRestPromise(a)}fitToBox(e,t){let{cover:n=!1,paddingLeft:i=0,paddingRight:r=0,paddingBottom:a=0,paddingTop:o=0}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},s=[],l=e.isBox3?eW.copy(e):eW.setFromObject(e);l.isEmpty()&&(console.warn("camera-controls: fitTo() cannot be used with an empty box. Aborting"),Promise.resolve());let c=eA(this._sphericalEnd.theta,eS),d=eA(this._sphericalEnd.phi,eS);s.push(this.rotateTo(c,d,t));let u=ej.setFromSpherical(this._sphericalEnd).normalize(),h=e0.setFromUnitVectors(u,ek),f=eO(Math.abs(u.y),1);f&&h.multiply(e1.setFromAxisAngle(eM,c)),h.multiply(this._yAxisUpSpaceInverse);let m=e$.makeEmpty();eB.copy(l.min).applyQuaternion(h),m.expandByPoint(eB),eB.copy(l.min).setX(l.max.x).applyQuaternion(h),m.expandByPoint(eB),eB.copy(l.min).setY(l.max.y).applyQuaternion(h),m.expandByPoint(eB),eB.copy(l.max).setZ(l.min.z).applyQuaternion(h),m.expandByPoint(eB),eB.copy(l.min).setZ(l.max.z).applyQuaternion(h),m.expandByPoint(eB),eB.copy(l.max).setY(l.min.y).applyQuaternion(h),m.expandByPoint(eB),eB.copy(l.max).setX(l.min.x).applyQuaternion(h),m.expandByPoint(eB),eB.copy(l.max).applyQuaternion(h),m.expandByPoint(eB),m.min.x-=i,m.min.y-=a,m.max.x+=r,m.max.y+=o,h.setFromUnitVectors(ek,u),f&&h.premultiply(e1.invert()),h.premultiply(this._yAxisUpSpace);let g=m.getSize(ej),p=m.getCenter(eB).applyQuaternion(h);if(ez(this._camera)){let e=this.getDistanceToFitBox(g.x,g.y,g.z,n);s.push(this.moveTo(p.x,p.y,p.z,t)),s.push(this.dollyTo(e,t)),s.push(this.setFocalOffset(0,0,0,t))}else if(eP(this._camera)){let e=this._camera,i=e.right-e.left,r=e.top-e.bottom,a=n?Math.max(i/g.x,r/g.y):Math.min(i/g.x,r/g.y);s.push(this.moveTo(p.x,p.y,p.z,t)),s.push(this.zoomTo(a,t)),s.push(this.setFocalOffset(0,0,0,t))}return Promise.all(s)}fitToSphere(e,t){var n;let i,r;let a=[],o=e instanceof eU.Sphere?eJ.copy(e):(i=(n=eJ).center,eW.makeEmpty(),e.traverseVisible(e=>{e.isMesh&&eW.expandByObject(e)}),eW.getCenter(i),r=0,e.traverseVisible(e=>{if(!e.isMesh)return;let t=e.geometry.clone();if(t.applyMatrix4(e.matrixWorld),t.isBufferGeometry){let e=t.attributes.position;for(let t=0,n=e.count;t<n;t++)ej.fromBufferAttribute(e,t),r=Math.max(r,i.distanceToSquared(ej))}else{let e=t.attributes.position,n=new eU.Vector3;for(let t=0,a=e.count;t<a;t++)n.fromBufferAttribute(e,t),r=Math.max(r,i.distanceToSquared(n))}}),n.radius=Math.sqrt(r),n);if(a.push(this.moveTo(o.center.x,o.center.y,o.center.z,t)),ez(this._camera)){let e=this.getDistanceToFitSphere(o.radius);a.push(this.dollyTo(e,t))}else if(eP(this._camera)){let e=this._camera.right-this._camera.left,n=this._camera.top-this._camera.bottom,i=2*o.radius;a.push(this.zoomTo(Math.min(e/i,n/i),t))}return a.push(this.setFocalOffset(0,0,0,t)),Promise.all(a)}setLookAt(e,t,n,i,r,a){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],s=eB.set(i,r,a),l=ej.set(e,t,n);this._targetEnd.copy(s),this._sphericalEnd.setFromVector3(l.sub(s).applyQuaternion(this._yAxisUpSpace)),this.normalizeRotations(),this._needsUpdate=!0,o||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));let c=!o||eO(this._target.x,this._targetEnd.x,this.restThreshold)&&eO(this._target.y,this._targetEnd.y,this.restThreshold)&&eO(this._target.z,this._targetEnd.z,this.restThreshold)&&eO(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&eO(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&eO(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(c)}lerpLookAt(e,t,n,i,r,a,o,s,l,c,d,u,h){let f=arguments.length>13&&void 0!==arguments[13]&&arguments[13],m=ej.set(i,r,a),g=eB.set(e,t,n);eQ.setFromVector3(g.sub(m).applyQuaternion(this._yAxisUpSpace));let p=eY.set(c,d,u),v=eB.set(o,s,l);eK.setFromVector3(v.sub(p).applyQuaternion(this._yAxisUpSpace)),this._targetEnd.copy(m.lerp(p,h));let _=eK.theta-eQ.theta,y=eK.phi-eQ.phi,x=eK.radius-eQ.radius;this._sphericalEnd.set(eQ.radius+x*h,eQ.phi+y*h,eQ.theta+_*h),this.normalizeRotations(),this._needsUpdate=!0,f||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));let E=!f||eO(this._target.x,this._targetEnd.x,this.restThreshold)&&eO(this._target.y,this._targetEnd.y,this.restThreshold)&&eO(this._target.z,this._targetEnd.z,this.restThreshold)&&eO(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&eO(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&eO(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(E)}setPosition(e,t,n){let i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return this.setLookAt(e,t,n,this._targetEnd.x,this._targetEnd.y,this._targetEnd.z,i)}setTarget(e,t,n){let i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=this.getPosition(ej);return this.setLookAt(r.x,r.y,r.z,e,t,n,i)}setFocalOffset(e,t,n){let i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this._focalOffsetEnd.set(e,t,n),this._needsUpdate=!0,i||this._focalOffset.copy(this._focalOffsetEnd);let r=!i||eO(this._focalOffset.x,this._focalOffsetEnd.x,this.restThreshold)&&eO(this._focalOffset.y,this._focalOffsetEnd.y,this.restThreshold)&&eO(this._focalOffset.z,this._focalOffsetEnd.z,this.restThreshold);return this._createOnRestPromise(r)}setOrbitPoint(e,t,n){this._camera.updateMatrixWorld(),eV.setFromMatrixColumn(this._camera.matrixWorldInverse,0),eG.setFromMatrixColumn(this._camera.matrixWorldInverse,1),eq.setFromMatrixColumn(this._camera.matrixWorldInverse,2);let i=ej.set(e,t,n),r=i.distanceTo(this._camera.position),a=i.sub(this._camera.position);eV.multiplyScalar(a.x),eG.multiplyScalar(a.y),eq.multiplyScalar(a.z),ej.copy(eV).add(eG).add(eq),ej.z=ej.z+r,this.dollyTo(r,!1),this.setFocalOffset(-ej.x,ej.y,-ej.z,!1),this.moveTo(e,t,n,!1)}setBoundary(e){if(!e){this._boundary.min.set(-1/0,-1/0,-1/0),this._boundary.max.set(1/0,1/0,1/0),this._needsUpdate=!0;return}this._boundary.copy(e),this._boundary.clampPoint(this._targetEnd,this._targetEnd),this._needsUpdate=!0}setViewport(e,t,n,i){if(null===e){this._viewport=null;return}this._viewport=this._viewport||new eU.Vector4,"number"==typeof e?this._viewport.set(e,t,n,i):this._viewport.copy(e)}getDistanceToFitBox(e,t,n){let i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(eF(this._camera,"getDistanceToFitBox"))return this._spherical.radius;let r=e/t,a=this._camera.getEffectiveFOV()*eU.MathUtils.DEG2RAD,o=this._camera.aspect;return((i?r>o:r<o)?t:e/o)*.5/Math.tan(.5*a)+.5*n}getDistanceToFitSphere(e){if(eF(this._camera,"getDistanceToFitSphere"))return this._spherical.radius;let t=this._camera.getEffectiveFOV()*eU.MathUtils.DEG2RAD,n=2*Math.atan(Math.tan(.5*t)*this._camera.aspect);return e/Math.sin(.5*(1<this._camera.aspect?t:n))}getTarget(e){return(e&&e.isVector3?e:new eU.Vector3).copy(this._targetEnd)}getPosition(e){return(e&&e.isVector3?e:new eU.Vector3).setFromSpherical(this._sphericalEnd).applyQuaternion(this._yAxisUpSpaceInverse).add(this._targetEnd)}getFocalOffset(e){return(e&&e.isVector3?e:new eU.Vector3).copy(this._focalOffsetEnd)}normalizeRotations(){this._sphericalEnd.theta=this._sphericalEnd.theta%eC,this._sphericalEnd.theta<0&&(this._sphericalEnd.theta+=eC),this._spherical.theta+=eC*Math.round((this._sphericalEnd.theta-this._spherical.theta)/eC)}reset(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Promise.all([this.setLookAt(this._position0.x,this._position0.y,this._position0.z,this._target0.x,this._target0.y,this._target0.z,e),this.setFocalOffset(this._focalOffset0.x,this._focalOffset0.y,this._focalOffset0.z,e),this.zoomTo(this._zoom0,e)])}saveState(){this.getTarget(this._target0),this.getPosition(this._position0),this._zoom0=this._zoom,this._focalOffset0.copy(this._focalOffset)}updateCameraUp(){this._yAxisUpSpace.setFromUnitVectors(this._camera.up,eM),eN(this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace))}update(e){let t=Math.min((this._state===eT.NONE?this.dampingFactor:this.draggingDampingFactor)*e*60,1),n=this._sphericalEnd.theta-this._spherical.theta,i=this._sphericalEnd.phi-this._spherical.phi,r=this._sphericalEnd.radius-this._spherical.radius,a=eZ.subVectors(this._targetEnd,this._target),o=eX.subVectors(this._focalOffsetEnd,this._focalOffset);if(ew(n)&&ew(i)&&ew(r)&&ew(a.x)&&ew(a.y)&&ew(a.z)&&ew(o.x)&&ew(o.y)&&ew(o.z)?(this._spherical.copy(this._sphericalEnd),this._target.copy(this._targetEnd),this._focalOffset.copy(this._focalOffsetEnd)):(this._spherical.set(this._spherical.radius+r*t,this._spherical.phi+i*t,this._spherical.theta+n*t),this._target.add(a.multiplyScalar(t)),this._focalOffset.add(o.multiplyScalar(t)),this._needsUpdate=!0),0!==this._dollyControlAmount){if(ez(this._camera)){let e=this._camera,t=ej.setFromSpherical(this._sphericalEnd).applyQuaternion(this._yAxisUpSpaceInverse).normalize().negate(),n=eB.copy(t).cross(e.up).normalize();0===n.lengthSq()&&(n.x=1);let i=eY.crossVectors(n,t),r=this._sphericalEnd.radius*Math.tan(e.getEffectiveFOV()*eU.MathUtils.DEG2RAD*.5),a=(this._sphericalEnd.radius-this._dollyControlAmount-this._sphericalEnd.radius)/this._sphericalEnd.radius,o=ej.copy(this._targetEnd).add(n.multiplyScalar(this._dollyControlCoord.x*r*e.aspect)).add(i.multiplyScalar(this._dollyControlCoord.y*r));this._targetEnd.lerp(o,a)}else if(eP(this._camera)){let e=this._camera,t=e.getWorldDirection(ej.clone()),n=this._targetEnd.x*t.x+this._targetEnd.y*t.y+this._targetEnd.z*t.z,i=ej.set(this._dollyControlCoord.x,this._dollyControlCoord.y,(e.near+e.far)/(e.near-e.far)).unproject(e),r=eB.set(0,0,-1).applyQuaternion(e.quaternion),a=eY.copy(i).add(r.multiplyScalar(-i.dot(e.up))),o=-(this._zoom-this._dollyControlAmount-this._zoomEnd)/this._zoom;this._targetEnd.lerp(a,o);let s=this._targetEnd.x*t.x+this._targetEnd.y*t.y+this._targetEnd.z*t.z,l=t.multiplyScalar(s-n);this._targetEnd.sub(l)}this._target.copy(this._targetEnd),this._boundary.clampPoint(this._targetEnd,this._targetEnd),this._dollyControlAmount=0}let s=this._collisionTest();this._spherical.radius=Math.min(this._spherical.radius,s),this._spherical.makeSafe(),this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target),this._camera.lookAt(this._target),ew(this._focalOffset.x)&&ew(this._focalOffset.y)&&ew(this._focalOffset.z)||(this._camera.updateMatrix(),eV.setFromMatrixColumn(this._camera.matrix,0),eG.setFromMatrixColumn(this._camera.matrix,1),eq.setFromMatrixColumn(this._camera.matrix,2),eV.multiplyScalar(this._focalOffset.x),eG.multiplyScalar(-this._focalOffset.y),eq.multiplyScalar(this._focalOffset.z),ej.copy(eV).add(eG).add(eq),this._camera.position.add(ej)),this._boundaryEnclosesCamera&&this._encloseToBoundary(this._camera.position.copy(this._target),ej.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse),1);let l=this._zoomEnd-this._zoom;this._zoom+=l*t,this._camera.zoom!==this._zoom&&(ew(l)&&(this._zoom=this._zoomEnd),this._camera.zoom=this._zoom,this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0);let c=this._needsUpdate;return c&&!this._updatedLastTime?(this._hasRested=!1,this.dispatchEvent({type:"wake"}),this.dispatchEvent({type:"update"})):c?(this.dispatchEvent({type:"update"}),ew(n,this.restThreshold)&&ew(i,this.restThreshold)&&ew(r,this.restThreshold)&&ew(a.x,this.restThreshold)&&ew(a.y,this.restThreshold)&&ew(a.z,this.restThreshold)&&ew(o.x,this.restThreshold)&&ew(o.y,this.restThreshold)&&ew(o.z,this.restThreshold)&&ew(l,this.restThreshold)&&!this._hasRested&&(this._hasRested=!0,this.dispatchEvent({type:"rest"}))):!c&&this._updatedLastTime&&this.dispatchEvent({type:"sleep"}),this._updatedLastTime=c,this._needsUpdate=!1,c}toJSON(){return JSON.stringify({enabled:this._enabled,minDistance:this.minDistance,maxDistance:eL(this.maxDistance),minZoom:this.minZoom,maxZoom:eL(this.maxZoom),minPolarAngle:this.minPolarAngle,maxPolarAngle:eL(this.maxPolarAngle),minAzimuthAngle:eL(this.minAzimuthAngle),maxAzimuthAngle:eL(this.maxAzimuthAngle),dampingFactor:this.dampingFactor,draggingDampingFactor:this.draggingDampingFactor,dollySpeed:this.dollySpeed,truckSpeed:this.truckSpeed,dollyToCursor:this.dollyToCursor,verticalDragToForward:this.verticalDragToForward,target:this._targetEnd.toArray(),position:ej.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),zoom:this._zoomEnd,focalOffset:this._focalOffsetEnd.toArray(),target0:this._target0.toArray(),position0:this._position0.toArray(),zoom0:this._zoom0,focalOffset0:this._focalOffset0.toArray()})}fromJSON(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=JSON.parse(e),i=ej.fromArray(n.position);this.enabled=n.enabled,this.minDistance=n.minDistance,this.maxDistance=eD(n.maxDistance),this.minZoom=n.minZoom,this.maxZoom=eD(n.maxZoom),this.minPolarAngle=n.minPolarAngle,this.maxPolarAngle=eD(n.maxPolarAngle),this.minAzimuthAngle=eD(n.minAzimuthAngle),this.maxAzimuthAngle=eD(n.maxAzimuthAngle),this.dampingFactor=n.dampingFactor,this.draggingDampingFactor=n.draggingDampingFactor,this.dollySpeed=n.dollySpeed,this.truckSpeed=n.truckSpeed,this.dollyToCursor=n.dollyToCursor,this.verticalDragToForward=n.verticalDragToForward,this._target0.fromArray(n.target0),this._position0.fromArray(n.position0),this._zoom0=n.zoom0,this._focalOffset0.fromArray(n.focalOffset0),this.moveTo(n.target[0],n.target[1],n.target[2],t),eQ.setFromVector3(i.sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace)),this.rotateTo(eQ.theta,eQ.phi,t),this.zoomTo(n.zoom,t),this.setFocalOffset(n.focalOffset[0],n.focalOffset[1],n.focalOffset[2],t),this._needsUpdate=!0}dispose(){this._removeAllEventListeners()}_findPointerById(e){let t=null;return this._activePointers.some(n=>n.pointerId===e&&(t=n,!0)),t}_encloseToBoundary(e,t,n){let i=t.lengthSq();if(0===i)return e;let r=eB.copy(t).add(e),a=this._boundary.clampPoint(r,eY).sub(r),o=a.lengthSq();if(0===o)return e.add(t);if(o===i)return e;if(0===n)return e.add(t).add(a);{let i=1+n*o/t.dot(a);return e.add(eB.copy(t).multiplyScalar(i)).add(a.multiplyScalar(1-n))}}_updateNearPlaneCorners(){if(ez(this._camera)){let e=this._camera,t=e.near,n=Math.tan(e.getEffectiveFOV()*eU.MathUtils.DEG2RAD*.5)*t,i=n*e.aspect;this._nearPlaneCorners[0].set(-i,-n,0),this._nearPlaneCorners[1].set(i,-n,0),this._nearPlaneCorners[2].set(i,n,0),this._nearPlaneCorners[3].set(-i,n,0)}else if(eP(this._camera)){let e=this._camera,t=1/e.zoom,n=e.left*t,i=e.right*t,r=e.top*t,a=e.bottom*t;this._nearPlaneCorners[0].set(n,r,0),this._nearPlaneCorners[1].set(i,r,0),this._nearPlaneCorners[2].set(i,a,0),this._nearPlaneCorners[3].set(n,a,0)}}_collisionTest(){let e=1/0;if(!(this.colliderMeshes.length>=1)||eF(this._camera,"_collisionTest"))return e;let t=ej.setFromSpherical(this._spherical).divideScalar(this._spherical.radius);e3.lookAt(eI,t,this._camera.up);for(let n=0;n<4;n++){let i=eB.copy(this._nearPlaneCorners[n]);i.applyMatrix4(e3);let r=eY.addVectors(this._target,i);e2.set(r,t),e2.far=this._spherical.radius+1;let a=e2.intersectObjects(this.colliderMeshes);0!==a.length&&a[0].distance<e&&(e=a[0].distance)}return e}_getClientRect(e){let t=this._domElement.getBoundingClientRect();return e.x=t.left,e.y=t.top,this._viewport?(e.x+=this._viewport.x,e.y+=t.height-this._viewport.w-this._viewport.y,e.width=this._viewport.z,e.height=this._viewport.w):(e.width=t.width,e.height=t.height),e}_createOnRestPromise(e){return e?Promise.resolve():(this._hasRested=!1,this.dispatchEvent({type:"transitionstart"}),new Promise(e=>{let t=()=>{this.removeEventListener("rest",t),e()};this.addEventListener("rest",t)}))}_removeAllEventListeners(){}constructor(e,t){if(super(),this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.minDistance=0,this.maxDistance=1/0,this.infinityDolly=!1,this.minZoom=.01,this.maxZoom=1/0,this.dampingFactor=.05,this.draggingDampingFactor=.25,this.azimuthRotateSpeed=1,this.polarRotateSpeed=1,this.dollySpeed=1,this.truckSpeed=2,this.dollyToCursor=!1,this.dragToOffset=!1,this.verticalDragToForward=!1,this.boundaryFriction=0,this.restThreshold=.01,this.colliderMeshes=[],this.cancel=()=>{},this._enabled=!0,this._state=eT.NONE,this._viewport=null,this._dollyControlAmount=0,this._hasRested=!0,this._boundaryEnclosesCamera=!1,this._needsUpdate=!0,this._updatedLastTime=!1,this._elementRect=new DOMRect,this._activePointers=[],this._truckInternal=(e,t,n)=>{if(ez(this._camera)){let i=ej.copy(this._camera.position).sub(this._target),r=this._camera.getEffectiveFOV()*eU.MathUtils.DEG2RAD,a=i.length()*Math.tan(.5*r),o=this.truckSpeed*e*a/this._elementRect.height,s=this.truckSpeed*t*a/this._elementRect.height;this.verticalDragToForward?(n?this.setFocalOffset(this._focalOffsetEnd.x+o,this._focalOffsetEnd.y,this._focalOffsetEnd.z,!0):this.truck(o,0,!0),this.forward(-s,!0)):n?this.setFocalOffset(this._focalOffsetEnd.x+o,this._focalOffsetEnd.y+s,this._focalOffsetEnd.z,!0):this.truck(o,s,!0)}else if(eP(this._camera)){let i=this._camera,r=e*(i.right-i.left)/i.zoom/this._elementRect.width,a=t*(i.top-i.bottom)/i.zoom/this._elementRect.height;n?this.setFocalOffset(this._focalOffsetEnd.x+r,this._focalOffsetEnd.y+a,this._focalOffsetEnd.z,!0):this.truck(r,a,!0)}},this._rotateInternal=(e,t)=>{let n=eC*this.azimuthRotateSpeed*e/this._elementRect.height,i=eC*this.polarRotateSpeed*t/this._elementRect.height;this.rotate(n,i,!0)},this._dollyInternal=(e,t,n)=>{let i=Math.pow(.95,-e*this.dollySpeed),r=this._sphericalEnd.radius*i,a=this._sphericalEnd.radius,o=a*(e>=0?-1:1);this.dollyTo(r),this.infinityDolly&&(r<this.minDistance||this.maxDistance===this.minDistance)&&(this._camera.getWorldDirection(ej),this._targetEnd.add(ej.normalize().multiplyScalar(o)),this._target.add(ej.normalize().multiplyScalar(o))),this.dollyToCursor&&(this._dollyControlAmount+=this._sphericalEnd.radius-a,this.infinityDolly&&(r<this.minDistance||this.maxDistance===this.minDistance)&&(this._dollyControlAmount-=o),this._dollyControlCoord.set(t,n))},this._zoomInternal=(e,t,n)=>{let i=Math.pow(.95,e*this.dollySpeed),r=this._zoomEnd;this.zoomTo(this._zoom*i),this.dollyToCursor&&(this._dollyControlAmount+=this._zoomEnd-r,this._dollyControlCoord.set(t,n))},void 0===eU&&console.error("camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information."),this._camera=e,this._yAxisUpSpace=new eU.Quaternion().setFromUnitVectors(this._camera.up,eM),this._yAxisUpSpaceInverse=eN(this._yAxisUpSpace.clone()),this._state=eT.NONE,this._domElement=t,this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none",this._target=new eU.Vector3,this._targetEnd=this._target.clone(),this._focalOffset=new eU.Vector3,this._focalOffsetEnd=this._focalOffset.clone(),this._spherical=new eU.Spherical().setFromVector3(ej.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace)),this._sphericalEnd=this._spherical.clone(),this._zoom=this._camera.zoom,this._zoomEnd=this._zoom,this._nearPlaneCorners=[new eU.Vector3,new eU.Vector3,new eU.Vector3,new eU.Vector3],this._updateNearPlaneCorners(),this._boundary=new eU.Box3(new eU.Vector3(-1/0,-1/0,-1/0),new eU.Vector3(1/0,1/0,1/0)),this._target0=this._target.clone(),this._position0=this._camera.position.clone(),this._zoom0=this._zoom,this._focalOffset0=this._focalOffset.clone(),this._dollyControlAmount=0,this._dollyControlCoord=new eU.Vector2,this.mouseButtons={left:eT.ROTATE,middle:eT.DOLLY,right:eT.TRUCK,wheel:ez(this._camera)?eT.DOLLY:eP(this._camera)?eT.ZOOM:eT.NONE},this.touches={one:eT.TOUCH_ROTATE,two:ez(this._camera)?eT.TOUCH_DOLLY_TRUCK:eP(this._camera)?eT.TOUCH_ZOOM_TRUCK:eT.NONE,three:eT.TOUCH_TRUCK},this._domElement){let e=new eU.Vector2,t=new eU.Vector2,n=new eU.Vector2,i=e=>{if(!this._enabled)return;let t={pointerId:e.pointerId,clientX:e.clientX,clientY:e.clientY,deltaX:0,deltaY:0};this._activePointers.push(t),this._domElement.ownerDocument.removeEventListener("pointermove",o,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",c),this._domElement.ownerDocument.addEventListener("pointermove",o,{passive:!1}),this._domElement.ownerDocument.addEventListener("pointerup",c),g(e)},r=e=>{if(!this._enabled)return;let t={pointerId:0,clientX:e.clientX,clientY:e.clientY,deltaX:0,deltaY:0};this._activePointers.push(t),this._domElement.ownerDocument.removeEventListener("mousemove",s),this._domElement.ownerDocument.removeEventListener("mouseup",d),this._domElement.ownerDocument.addEventListener("mousemove",s),this._domElement.ownerDocument.addEventListener("mouseup",d),g(e)},a=e=>{this._enabled&&(e.preventDefault(),Array.prototype.forEach.call(e.changedTouches,e=>{let t={pointerId:e.identifier,clientX:e.clientX,clientY:e.clientY,deltaX:0,deltaY:0};this._activePointers.push(t)}),this._domElement.ownerDocument.removeEventListener("touchmove",l,{passive:!1}),this._domElement.ownerDocument.removeEventListener("touchend",u),this._domElement.ownerDocument.addEventListener("touchmove",l,{passive:!1}),this._domElement.ownerDocument.addEventListener("touchend",u),g(e))},o=e=>{e.cancelable&&e.preventDefault();let t=e.pointerId,n=this._findPointerById(t);if(n){if(n.clientX=e.clientX,n.clientY=e.clientY,n.deltaX=e.movementX,n.deltaY=e.movementY,"touch"===e.pointerType)switch(this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three}else this._state=0,(e.buttons&eb.LEFT)===eb.LEFT&&(this._state=this._state|this.mouseButtons.left),(e.buttons&eb.MIDDLE)===eb.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),(e.buttons&eb.RIGHT)===eb.RIGHT&&(this._state=this._state|this.mouseButtons.right);p()}},s=e=>{let t=this._findPointerById(0);t&&(t.clientX=e.clientX,t.clientY=e.clientY,t.deltaX=e.movementX,t.deltaY=e.movementY,this._state=0,(e.buttons&eb.LEFT)===eb.LEFT&&(this._state=this._state|this.mouseButtons.left),(e.buttons&eb.MIDDLE)===eb.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),(e.buttons&eb.RIGHT)===eb.RIGHT&&(this._state=this._state|this.mouseButtons.right),p())},l=e=>{e.cancelable&&e.preventDefault(),Array.prototype.forEach.call(e.changedTouches,e=>{let t=e.identifier,n=this._findPointerById(t);n&&(n.clientX=e.clientX,n.clientY=e.clientY)}),p()},c=e=>{let t=e.pointerId,n=this._findPointerById(t);if(n&&this._activePointers.splice(this._activePointers.indexOf(n),1),"touch"===e.pointerType)switch(this._activePointers.length){case 0:this._state=eT.NONE;break;case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three}else this._state=eT.NONE;v()},d=()=>{let e=this._findPointerById(0);e&&this._activePointers.splice(this._activePointers.indexOf(e),1),this._state=eT.NONE,v()},u=e=>{switch(Array.prototype.forEach.call(e.changedTouches,e=>{let t=e.identifier,n=this._findPointerById(t);n&&this._activePointers.splice(this._activePointers.indexOf(n),1)}),this._activePointers.length){case 0:this._state=eT.NONE;break;case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three}v()},h=-1,f=e=>{if(!this._enabled||this.mouseButtons.wheel===eT.NONE)return;if(e.preventDefault(),this.dollyToCursor||this.mouseButtons.wheel===eT.ROTATE||this.mouseButtons.wheel===eT.TRUCK){let e=performance.now();h-e<1e3&&this._getClientRect(this._elementRect),h=e}let t=e8?-1:-3,n=1===e.deltaMode?e.deltaY/t:e.deltaY/(10*t),i=this.dollyToCursor?(e.clientX-this._elementRect.x)/this._elementRect.width*2-1:0,r=this.dollyToCursor?-((e.clientY-this._elementRect.y)/this._elementRect.height*2)+1:0;switch(this.mouseButtons.wheel){case eT.ROTATE:this._rotateInternal(e.deltaX,e.deltaY);break;case eT.TRUCK:this._truckInternal(e.deltaX,e.deltaY,!1);break;case eT.OFFSET:this._truckInternal(e.deltaX,e.deltaY,!0);break;case eT.DOLLY:this._dollyInternal(-n,i,r);break;case eT.ZOOM:this._zoomInternal(-n,i,r)}this.dispatchEvent({type:"control"})},m=e=>{this._enabled&&e.preventDefault()},g=i=>{if(this._enabled){if(eR(this._activePointers,eH),this._getClientRect(this._elementRect),e.copy(eH),t.copy(eH),this._activePointers.length>=2){let e=eH.x-this._activePointers[1].clientX,i=eH.y-this._activePointers[1].clientY;n.set(0,Math.sqrt(e*e+i*i));let r=(this._activePointers[0].clientX+this._activePointers[1].clientX)*.5,a=(this._activePointers[0].clientY+this._activePointers[1].clientY)*.5;t.set(r,a)}if("touches"in i||"pointerType"in i&&"touch"===i.pointerType)switch(this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three}else this._state=0,(i.buttons&eb.LEFT)===eb.LEFT&&(this._state=this._state|this.mouseButtons.left),(i.buttons&eb.MIDDLE)===eb.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),(i.buttons&eb.RIGHT)===eb.RIGHT&&(this._state=this._state|this.mouseButtons.right);this.dispatchEvent({type:"controlstart"})}},p=()=>{if(!this._enabled)return;eR(this._activePointers,eH);let i=this._domElement&&document.pointerLockElement===this._domElement,r=i?-this._activePointers[0].deltaX:t.x-eH.x,a=i?-this._activePointers[0].deltaY:t.y-eH.y;if(t.copy(eH),((this._state&eT.ROTATE)===eT.ROTATE||(this._state&eT.TOUCH_ROTATE)===eT.TOUCH_ROTATE||(this._state&eT.TOUCH_DOLLY_ROTATE)===eT.TOUCH_DOLLY_ROTATE||(this._state&eT.TOUCH_ZOOM_ROTATE)===eT.TOUCH_ZOOM_ROTATE)&&this._rotateInternal(r,a),(this._state&eT.DOLLY)===eT.DOLLY||(this._state&eT.ZOOM)===eT.ZOOM){let t=this.dollyToCursor?(e.x-this._elementRect.x)/this._elementRect.width*2-1:0,n=this.dollyToCursor?-((e.y-this._elementRect.y)/this._elementRect.height*2)+1:0;this._state===eT.DOLLY?this._dollyInternal(a*e7,t,n):this._zoomInternal(a*e7,t,n)}if((this._state&eT.TOUCH_DOLLY)===eT.TOUCH_DOLLY||(this._state&eT.TOUCH_ZOOM)===eT.TOUCH_ZOOM||(this._state&eT.TOUCH_DOLLY_TRUCK)===eT.TOUCH_DOLLY_TRUCK||(this._state&eT.TOUCH_ZOOM_TRUCK)===eT.TOUCH_ZOOM_TRUCK||(this._state&eT.TOUCH_DOLLY_OFFSET)===eT.TOUCH_DOLLY_OFFSET||(this._state&eT.TOUCH_ZOOM_OFFSET)===eT.TOUCH_ZOOM_OFFSET||(this._state&eT.TOUCH_DOLLY_ROTATE)===eT.TOUCH_DOLLY_ROTATE||(this._state&eT.TOUCH_ZOOM_ROTATE)===eT.TOUCH_ZOOM_ROTATE){let e=eH.x-this._activePointers[1].clientX,i=eH.y-this._activePointers[1].clientY,r=Math.sqrt(e*e+i*i),a=n.y-r;n.set(0,r);let o=this.dollyToCursor?(t.x-this._elementRect.x)/this._elementRect.width*2-1:0,s=this.dollyToCursor?-((t.y-this._elementRect.y)/this._elementRect.height*2)+1:0;this._state===eT.TOUCH_DOLLY||this._state===eT.TOUCH_DOLLY_ROTATE||this._state===eT.TOUCH_DOLLY_TRUCK||this._state===eT.TOUCH_DOLLY_OFFSET?this._dollyInternal(a*e7,o,s):this._zoomInternal(a*e7,o,s)}((this._state&eT.TRUCK)===eT.TRUCK||(this._state&eT.TOUCH_TRUCK)===eT.TOUCH_TRUCK||(this._state&eT.TOUCH_DOLLY_TRUCK)===eT.TOUCH_DOLLY_TRUCK||(this._state&eT.TOUCH_ZOOM_TRUCK)===eT.TOUCH_ZOOM_TRUCK)&&this._truckInternal(r,a,!1),((this._state&eT.OFFSET)===eT.OFFSET||(this._state&eT.TOUCH_OFFSET)===eT.TOUCH_OFFSET||(this._state&eT.TOUCH_DOLLY_OFFSET)===eT.TOUCH_DOLLY_OFFSET||(this._state&eT.TOUCH_ZOOM_OFFSET)===eT.TOUCH_ZOOM_OFFSET)&&this._truckInternal(r,a,!0),this.dispatchEvent({type:"control"})},v=()=>{eR(this._activePointers,eH),t.copy(eH),0===this._activePointers.length&&(this._domElement.ownerDocument.removeEventListener("pointermove",o,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",c),this._domElement.ownerDocument.removeEventListener("touchmove",l,{passive:!1}),this._domElement.ownerDocument.removeEventListener("touchend",u),this.dispatchEvent({type:"controlend"}))};this._domElement.addEventListener("pointerdown",i),e9&&this._domElement.addEventListener("mousedown",r),e9&&this._domElement.addEventListener("touchstart",a),this._domElement.addEventListener("pointercancel",c),this._domElement.addEventListener("wheel",f,{passive:!1}),this._domElement.addEventListener("contextmenu",m),this._removeAllEventListeners=()=>{this._domElement.removeEventListener("pointerdown",i),this._domElement.removeEventListener("mousedown",r),this._domElement.removeEventListener("touchstart",a),this._domElement.removeEventListener("pointercancel",c),this._domElement.removeEventListener("wheel",f,{passive:!1}),this._domElement.removeEventListener("contextmenu",m),this._domElement.ownerDocument.removeEventListener("pointermove",o,{passive:!1}),this._domElement.ownerDocument.removeEventListener("mousemove",s),this._domElement.ownerDocument.removeEventListener("touchmove",l,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",c),this._domElement.ownerDocument.removeEventListener("mouseup",d),this._domElement.ownerDocument.removeEventListener("touchend",u)},this.cancel=()=>{this._state!==eT.NONE&&(this._state=eT.NONE,this._activePointers.length=0,v())}}this.update(0)}};function te(e){return e/180*Math.PI}function tt(e){return e.map(e=>te(e))}function tn(e){return e.replace("http://localhost:3001/customize","").replace("https://shadergradient.co/customize","").replace("https://www.shadergradient.co/customize","")}function ti(e){var{dampingFactor:t=.05}=e,n=z(e,["dampingFactor"]);e6.install({THREE:l}),(0,c.e)({CameraControls:e6});let i=(0,c.A)(e=>e.camera),r=(0,c.A)(e=>e.gl),a=function(e){let{type:t,cAzimuthAngle:n,cPolarAngle:i,cDistance:r,cameraZoom:a,zoomOut:s,enableTransition:l}=e,d=(0,o.useRef)(),u=d.current;return(0,c.C)((e,t)=>d.current.update(t)),(0,o.useEffect)(()=>{null==u||u.rotateTo(te(n),te(i),l)},[u,n,i]),(0,o.useEffect)(()=>{s?"sphere"===t?(null==u||u.dollyTo(N.distance,l),null==u||u.zoomTo(N.zoom,l)):(null==u||u.dollyTo(F.distance,l),null==u||u.zoomTo(F.zoom,l)):"sphere"===t?(null==u||u.zoomTo(a,l),null==u||u.dollyTo(14,l)):(null==u||u.dollyTo(r,l),null==u||u.zoomTo(1,l))},[u,s,t,a,r]),d}(n);return(0,s.jsx)("cameraControls",{ref:a,args:[i,r.domElement],enableDamping:!0,dampingFactor:t,zoomSpeed:10,dollySpeed:10,restThreshold:0})}var tr=class extends l.DataTextureLoader{parse(e){let t=function(e,t){switch(e){case 1:throw Error("THREE.RGBELoader: Read Error: "+(t||""));case 2:throw Error("THREE.RGBELoader: Write Error: "+(t||""));case 3:throw Error("THREE.RGBELoader: Bad File Format: "+(t||""));default:throw Error("THREE.RGBELoader: Memory Error: "+(t||""))}},n=function(e,t,n){t=t||1024;let i=e.pos,r=-1,a=0,o="",s=String.fromCharCode.apply(null,new Uint16Array(e.subarray(i,i+128)));for(;0>(r=s.indexOf("\n"))&&a<t&&i<e.byteLength;)o+=s,a+=s.length,i+=128,s+=String.fromCharCode.apply(null,new Uint16Array(e.subarray(i,i+128)));return -1<r&&(!1!==n&&(e.pos+=a+r+1),o+s.slice(0,r))},i=new Uint8Array(e);i.pos=0;let r=function(e){let i=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,r=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,a=/^\s*FORMAT=(\S+)\s*$/,o=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,s={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0},l,c;for(!(e.pos>=e.byteLength)&&(l=n(e))||t(1,"no header found"),(c=l.match(/^#\?(\S+)/))||t(3,"bad initial token"),s.valid|=1,s.programtype=c[1],s.string+=l+"\n";!1!==(l=n(e));){if(s.string+=l+"\n","#"===l.charAt(0)){s.comments+=l+"\n";continue}if((c=l.match(i))&&(s.gamma=parseFloat(c[1])),(c=l.match(r))&&(s.exposure=parseFloat(c[1])),(c=l.match(a))&&(s.valid|=2,s.format=c[1]),(c=l.match(o))&&(s.valid|=4,s.height=parseInt(c[1],10),s.width=parseInt(c[2],10)),2&s.valid&&4&s.valid)break}return 2&s.valid||t(3,"missing format specifier"),4&s.valid||t(3,"missing image size specifier"),s}(i),a=r.width,o=r.height,s=function(e,n,i){if(n<8||n>32767||2!==e[0]||2!==e[1]||128&e[2])return new Uint8Array(e);n!==(e[2]<<8|e[3])&&t(3,"wrong scanline width");let r=new Uint8Array(4*n*i);r.length||t(4,"unable to allocate buffer space");let a=0,o=0,s=4*n,l=new Uint8Array(4),c=new Uint8Array(s),d=i;for(;d>0&&o<e.byteLength;){o+4>e.byteLength&&t(1),l[0]=e[o++],l[1]=e[o++],l[2]=e[o++],l[3]=e[o++],(2!=l[0]||2!=l[1]||(l[2]<<8|l[3])!=n)&&t(3,"bad rgbe scanline format");let i=0,u;for(;i<s&&o<e.byteLength;){let n=(u=e[o++])>128;if(n&&(u-=128),(0===u||i+u>s)&&t(3,"bad scanline data"),n){let t=e[o++];for(let e=0;e<u;e++)c[i++]=t}else c.set(e.subarray(o,o+u),i),i+=u,o+=u}for(let e=0;e<n;e++){let t=0;r[a]=c[e+t],t+=n,r[a+1]=c[e+t],t+=n,r[a+2]=c[e+t],t+=n,r[a+3]=c[e+t],a+=4}d--}return r}(i.subarray(i.pos),a,o),c,d,u;switch(this.type){case l.FloatType:u=s.length/4;let h=new Float32Array(4*u);for(let e=0;e<u;e++)!function(e,t,n,i){let r=Math.pow(2,e[t+3]-128)/255;n[i+0]=e[t+0]*r,n[i+1]=e[t+1]*r,n[i+2]=e[t+2]*r,n[i+3]=1}(s,4*e,h,4*e);c=h,d=l.FloatType;break;case l.HalfFloatType:u=s.length/4;let f=new Uint16Array(4*u);for(let e=0;e<u;e++)!function(e,t,n,i){let r=Math.pow(2,e[t+3]-128)/255;n[i+0]=l.DataUtils.toHalfFloat(Math.min(e[t+0]*r,65504)),n[i+1]=l.DataUtils.toHalfFloat(Math.min(e[t+1]*r,65504)),n[i+2]=l.DataUtils.toHalfFloat(Math.min(e[t+2]*r,65504)),n[i+3]=l.DataUtils.toHalfFloat(1)}(s,4*e,f,4*e);c=f,d=l.HalfFloatType;break;default:throw Error("THREE.RGBELoader: Unsupported type: "+this.type)}return{width:a,height:o,data:c,header:r.string,gamma:r.gamma,exposure:r.exposure,type:d}}setDataType(e){return this.type=e,this}load(e,t,n,i){return super.load(e,function(e,n){switch(e.type){case l.FloatType:case l.HalfFloatType:"colorSpace"in e?e.colorSpace="srgb-linear":e.encoding=3e3,e.minFilter=l.LinearFilter,e.magFilter=l.LinearFilter,e.generateMipmaps=!1,e.flipY=!0}t&&t(e,n)},n,i)}constructor(e){super(e),this.type=l.HalfFloatType}};function ta(e,t){let{path:n}=t;return(0,c.F)(tr,e,e=>e.setPath(n))}var to=e=>e.current&&e.current.isScene,ts=e=>to(e)?e.current:e;function tl(e){let{background:t=!1,envPreset:n}=e,i={city:ta("city.hdr",{path:U}),dawn:ta("dawn.hdr",{path:U}),lobby:ta("lobby.hdr",{path:U})}[n],r=(0,c.A)(e=>e.scene);return o.useLayoutEffect(()=>{if(i){let e=ts(r),n=(e.background,e.environment);return"only"!==t&&(e.environment=i),t&&(e.background=i),()=>{"only"!==t&&(e.environment=n),t&&(e.background="black")}}},[r,i,t]),i.mapping=l.EquirectangularReflectionMapping,null}var tc=0;function td(e){let{lightType:t,brightness:n,envPreset:i}=e;return(0,s.jsxs)(s.Fragment,{children:["3d"===t&&(0,s.jsx)("ambientLight",{intensity:n||1}),"env"===t&&(0,s.jsx)(o.Suspense,{fallback:(0,s.jsx)(tu,{}),children:(0,s.jsx)(tl,{envPreset:i,background:!1,loadingCallback:()=>{}})})]})}function tu(){let{progress:e}=function(){let[e,t]=(0,o.useState)({});return l.DefaultLoadingManager.onLoad=()=>{t(e=>T(b({},e),{active:!1}))},l.DefaultLoadingManager.onProgress=(e,n,i)=>{n===i&&(tc=i);let r=(n-tc)/(i-tc)*100||100;t(t=>T(b({},t),{active:!0,item:e,loaded:n,total:i,progress:r}))},e}();return(0,o.useEffect)(()=>{let t=document.getElementById("LoaderRoot");t&&e&&(100===e?(t.innerHTML="Ligths are loaded",setTimeout(()=>{t.innerHTML=""},1e3)):t.innerHTML="Loading lights...")},[e]),(0,s.jsx)("ambientLight",{intensity:.4})}function th(e){let t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null}function tf(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return e/255}l.ShaderChunk.uv2_pars_vertex="",l.ShaderChunk.uv2_vertex="",l.ShaderChunk.uv2_pars_fragment="",l.ShaderChunk.encodings_fragment="";var tm={};C(tm,{defaults:()=>tg,positionMix:()=>tP});var tg={};C(tg,{plane:()=>tp,sphere:()=>ty,waterPlane:()=>tb});var tp={};C(tp,{fragment:()=>tv,vertex:()=>t_});var tv="\n#define STANDARD\n#ifdef PHYSICAL\n#define REFLECTIVITY\n#define CLEARCOAT\n#define TRANSMISSION\n#endif\nuniform vec3 diffuse;uniform vec3 emissive;uniform float roughness;uniform float metalness;uniform float opacity;\n#ifdef TRANSMISSION\nuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\nuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\nuniform float clearcoat;uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\nuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n#ifdef USE_TANGENT\nvarying vec3 vTangent;varying vec3 vBitangent;\n#endif\n#endif\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <color_pars_fragment>\n#include <common>\n#include <dithering_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <map_pars_fragment>\n#include <packing>\n#include <uv2_pars_fragment>\n#include <uv_pars_fragment>\n#include <bsdfs>\n#include <bumpmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <clipping_planes_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <shadowmap_pars_fragment>\nvarying vec3 vNormal;varying float displacement;varying vec3 vPos;varying float vDistort;uniform float uC1r;uniform float uC1g;uniform float uC1b;uniform float uC2r;uniform float uC2g;uniform float uC2b;uniform float uC3r;uniform float uC3g;uniform float uC3b;varying vec3 color1;varying vec3 color2;varying vec3 color3;float linearToRelativeLuminance2(const in vec3 color){vec3 weights=vec3(0.2126,0.7152,0.0722);return dot(weights,color.rgb);}void main(){vec3 color1=vec3(uC1r,uC1g,uC1b);vec3 color2=vec3(uC2r,uC2g,uC2b);vec3 color3=vec3(uC3r,uC3g,uC3b);float clearcoat=1.0;float clearcoatRoughness=0.5;\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(mix(mix(color1,color2,smoothstep(-3.0,3.0,vPos.x)),color3,vPos.z),1);ReflectedLight reflectedLight=ReflectedLight(vec3(0.0),vec3(0.0),vec3(0.0),vec3(0.0));vec3 totalEmissiveRadiance=emissive;\n#ifdef TRANSMISSION\nfloat totalTransmission=transmission;\n#endif\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <color_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <roughnessmap_fragment>\n#include <metalnessmap_fragment>\n#include <normal_fragment_begin>\n#include <normal_fragment_maps>\n#include <clearcoat_normal_fragment_begin>\n#include <clearcoat_normal_fragment_maps>\n#include <emissivemap_fragment>\n#include <lights_physical_fragment>\n#include <lights_fragment_begin>\n#include <lights_fragment_maps>\n#include <lights_fragment_end>\n#include <aomap_fragment>\nvec3 outgoingLight=reflectedLight.directDiffuse+reflectedLight.indirectDiffuse+reflectedLight.directSpecular+reflectedLight.indirectSpecular;\n#ifdef TRANSMISSION\ndiffuseColor.a*=mix(saturate(1.-totalTransmission+linearToRelativeLuminance2(reflectedLight.directSpecular+reflectedLight.indirectSpecular)),1.0,metalness);\n#endif\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n#include <dithering_fragment>\ngl_FragColor=vec4(outgoingLight,diffuseColor.a);}",t_="vec3 mod289(vec3 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-0.85373472095314*r;}vec3 fade(vec3 t){return t*t*t*(t*(t*6.0-15.0)+10.0);}float cnoise(vec3 P){vec3 Pi0=floor(P);vec3 Pi1=Pi0+vec3(1.0);Pi0=mod289(Pi0);Pi1=mod289(Pi1);vec3 Pf0=fract(P);vec3 Pf1=Pf0-vec3(1.0);vec4 ix=vec4(Pi0.x,Pi1.x,Pi0.x,Pi1.x);vec4 iy=vec4(Pi0.yy,Pi1.yy);vec4 iz0=Pi0.zzzz;vec4 iz1=Pi1.zzzz;vec4 ixy=permute(permute(ix)+iy);vec4 ixy0=permute(ixy+iz0);vec4 ixy1=permute(ixy+iz1);vec4 gx0=ixy0*(1.0/7.0);vec4 gy0=fract(floor(gx0)*(1.0/7.0))-0.5;gx0=fract(gx0);vec4 gz0=vec4(0.5)-abs(gx0)-abs(gy0);vec4 sz0=step(gz0,vec4(0.0));gx0-=sz0*(step(0.0,gx0)-0.5);gy0-=sz0*(step(0.0,gy0)-0.5);vec4 gx1=ixy1*(1.0/7.0);vec4 gy1=fract(floor(gx1)*(1.0/7.0))-0.5;gx1=fract(gx1);vec4 gz1=vec4(0.5)-abs(gx1)-abs(gy1);vec4 sz1=step(gz1,vec4(0.0));gx1-=sz1*(step(0.0,gx1)-0.5);gy1-=sz1*(step(0.0,gy1)-0.5);vec3 g000=vec3(gx0.x,gy0.x,gz0.x);vec3 g100=vec3(gx0.y,gy0.y,gz0.y);vec3 g010=vec3(gx0.z,gy0.z,gz0.z);vec3 g110=vec3(gx0.w,gy0.w,gz0.w);vec3 g001=vec3(gx1.x,gy1.x,gz1.x);vec3 g101=vec3(gx1.y,gy1.y,gz1.y);vec3 g011=vec3(gx1.z,gy1.z,gz1.z);vec3 g111=vec3(gx1.w,gy1.w,gz1.w);vec4 norm0=taylorInvSqrt(vec4(dot(g000,g000),dot(g010,g010),dot(g100,g100),dot(g110,g110)));g000*=norm0.x;g010*=norm0.y;g100*=norm0.z;g110*=norm0.w;vec4 norm1=taylorInvSqrt(vec4(dot(g001,g001),dot(g011,g011),dot(g101,g101),dot(g111,g111)));g001*=norm1.x;g011*=norm1.y;g101*=norm1.z;g111*=norm1.w;float n000=dot(g000,Pf0);float n100=dot(g100,vec3(Pf1.x,Pf0.yz));float n010=dot(g010,vec3(Pf0.x,Pf1.y,Pf0.z));float n110=dot(g110,vec3(Pf1.xy,Pf0.z));float n001=dot(g001,vec3(Pf0.xy,Pf1.z));float n101=dot(g101,vec3(Pf1.x,Pf0.y,Pf1.z));float n011=dot(g011,vec3(Pf0.x,Pf1.yz));float n111=dot(g111,Pf1);vec3 fade_xyz=fade(Pf0);vec4 n_z=mix(vec4(n000,n100,n010,n110),vec4(n001,n101,n011,n111),fade_xyz.z);vec2 n_yz=mix(n_z.xy,n_z.zw,fade_xyz.y);float n_xyz=mix(n_yz.x,n_yz.y,fade_xyz.x);return 2.2*n_xyz;}mat3 rotation3dY(float angle){float s=sin(angle);float c=cos(angle);return mat3(c,0.0,-s,0.0,1.0,0.0,s,0.0,c);}vec3 rotateY(vec3 v,float angle){return rotation3dY(angle)*v;}varying vec3 vNormal;varying float displacement;varying vec3 vPos;varying float vDistort;varying vec2 vUv;uniform float uTime;uniform float uSpeed;uniform float uLoadingTime;uniform float uNoiseDensity;uniform float uNoiseStrength;\n#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n#ifdef USE_TANGENT\nvarying vec3 vTangent;varying vec3 vBitangent;\n#endif\n#endif\n#include <clipping_planes_pars_vertex>\n#include <color_pars_vertex>\n#include <common>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <skinning_pars_vertex>\n#include <uv2_pars_vertex>\n#include <uv_pars_vertex>\nvoid main(){\n#include <beginnormal_vertex>\n#include <color_vertex>\n#include <defaultnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <uv2_vertex>\n#include <uv_vertex>\n#ifndef FLAT_SHADED\nvNormal=normalize(transformedNormal);\n#ifdef USE_TANGENT\nvTangent=normalize(transformedTangent);vBitangent=normalize(cross(vNormal,vTangent)*tangent.w);\n#endif\n#endif\n#include <begin_vertex>\n#include <clipping_planes_vertex>\n#include <displacementmap_vertex>\n#include <logdepthbuf_vertex>\n#include <morphtarget_vertex>\n#include <project_vertex>\n#include <skinning_vertex>\nvViewPosition=-mvPosition.xyz;\n#include <fog_vertex>\n#include <shadowmap_vertex>\n#include <worldpos_vertex>\nvUv=uv;float t=uTime*uSpeed;float distortion=0.75*cnoise(0.43*position*uNoiseDensity+t);vec3 pos=position+normal*distortion*uNoiseStrength*uLoadingTime;vPos=pos;gl_Position=projectionMatrix*modelViewMatrix*vec4(pos,1.);}",ty={};C(ty,{fragment:()=>tx,vertex:()=>tE});var tx="\n#define STANDARD\n#ifdef PHYSICAL\n#define REFLECTIVITY\n#define CLEARCOAT\n#define TRANSMISSION\n#endif\nuniform vec3 diffuse;uniform vec3 emissive;uniform float roughness;uniform float metalness;uniform float opacity;\n#ifdef TRANSMISSION\nuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\nuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\nuniform float clearcoat;uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\nuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n#ifdef USE_TANGENT\nvarying vec3 vTangent;varying vec3 vBitangent;\n#endif\n#endif\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <color_pars_fragment>\n#include <common>\n#include <dithering_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <map_pars_fragment>\n#include <packing>\n#include <uv2_pars_fragment>\n#include <uv_pars_fragment>\n#include <bsdfs>\n#include <bumpmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <clipping_planes_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <shadowmap_pars_fragment>\nvarying vec3 vNormal;varying float displacement;varying vec3 vPos;varying float vDistort;uniform float uC1r;uniform float uC1g;uniform float uC1b;uniform float uC2r;uniform float uC2g;uniform float uC2b;uniform float uC3r;uniform float uC3g;uniform float uC3b;varying vec3 color1;varying vec3 color2;varying vec3 color3;varying float distanceToCenter;float linearToRelativeLuminance2(const in vec3 color){vec3 weights=vec3(0.2126,0.7152,0.0722);return dot(weights,color.rgb);}void main(){vec3 color1=vec3(uC1r,uC1g,uC1b);vec3 color2=vec3(uC2r,uC2g,uC2b);vec3 color3=vec3(uC3r,uC3g,uC3b);float clearcoat=1.0;float clearcoatRoughness=0.5;\n#include <clipping_planes_fragment>\nfloat distanceToCenter=distance(vPos,vec3(0,0,0));vec4 diffuseColor=vec4(mix(color3,mix(color2,color1,smoothstep(-1.0,1.0,vPos.y)),distanceToCenter),1);ReflectedLight reflectedLight=ReflectedLight(vec3(0.0),vec3(0.0),vec3(0.0),vec3(0.0));vec3 totalEmissiveRadiance=emissive;\n#ifdef TRANSMISSION\nfloat totalTransmission=transmission;\n#endif\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <color_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <roughnessmap_fragment>\n#include <metalnessmap_fragment>\n#include <normal_fragment_begin>\n#include <normal_fragment_maps>\n#include <clearcoat_normal_fragment_begin>\n#include <clearcoat_normal_fragment_maps>\n#include <emissivemap_fragment>\n#include <lights_physical_fragment>\n#include <lights_fragment_begin>\n#include <lights_fragment_maps>\n#include <lights_fragment_end>\n#include <aomap_fragment>\nvec3 outgoingLight=reflectedLight.directDiffuse+reflectedLight.indirectDiffuse+reflectedLight.directSpecular+reflectedLight.indirectSpecular;\n#ifdef TRANSMISSION\ndiffuseColor.a*=mix(saturate(1.-totalTransmission+linearToRelativeLuminance2(reflectedLight.directSpecular+reflectedLight.indirectSpecular)),1.0,metalness);\n#endif\ngl_FragColor=vec4(outgoingLight,diffuseColor.a);\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n#include <dithering_fragment>\n}",tE="vec3 mod289(vec3 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-0.85373472095314*r;}vec3 fade(vec3 t){return t*t*t*(t*(t*6.0-15.0)+10.0);}float pnoise(vec3 P,vec3 rep){vec3 Pi0=mod(floor(P),rep);vec3 Pi1=mod(Pi0+vec3(1.0),rep);Pi0=mod289(Pi0);Pi1=mod289(Pi1);vec3 Pf0=fract(P);vec3 Pf1=Pf0-vec3(1.0);vec4 ix=vec4(Pi0.x,Pi1.x,Pi0.x,Pi1.x);vec4 iy=vec4(Pi0.yy,Pi1.yy);vec4 iz0=Pi0.zzzz;vec4 iz1=Pi1.zzzz;vec4 ixy=permute(permute(ix)+iy);vec4 ixy0=permute(ixy+iz0);vec4 ixy1=permute(ixy+iz1);vec4 gx0=ixy0*(1.0/7.0);vec4 gy0=fract(floor(gx0)*(1.0/7.0))-0.5;gx0=fract(gx0);vec4 gz0=vec4(0.5)-abs(gx0)-abs(gy0);vec4 sz0=step(gz0,vec4(0.0));gx0-=sz0*(step(0.0,gx0)-0.5);gy0-=sz0*(step(0.0,gy0)-0.5);vec4 gx1=ixy1*(1.0/7.0);vec4 gy1=fract(floor(gx1)*(1.0/7.0))-0.5;gx1=fract(gx1);vec4 gz1=vec4(0.5)-abs(gx1)-abs(gy1);vec4 sz1=step(gz1,vec4(0.0));gx1-=sz1*(step(0.0,gx1)-0.5);gy1-=sz1*(step(0.0,gy1)-0.5);vec3 g000=vec3(gx0.x,gy0.x,gz0.x);vec3 g100=vec3(gx0.y,gy0.y,gz0.y);vec3 g010=vec3(gx0.z,gy0.z,gz0.z);vec3 g110=vec3(gx0.w,gy0.w,gz0.w);vec3 g001=vec3(gx1.x,gy1.x,gz1.x);vec3 g101=vec3(gx1.y,gy1.y,gz1.y);vec3 g011=vec3(gx1.z,gy1.z,gz1.z);vec3 g111=vec3(gx1.w,gy1.w,gz1.w);vec4 norm0=taylorInvSqrt(vec4(dot(g000,g000),dot(g010,g010),dot(g100,g100),dot(g110,g110)));g000*=norm0.x;g010*=norm0.y;g100*=norm0.z;g110*=norm0.w;vec4 norm1=taylorInvSqrt(vec4(dot(g001,g001),dot(g011,g011),dot(g101,g101),dot(g111,g111)));g001*=norm1.x;g011*=norm1.y;g101*=norm1.z;g111*=norm1.w;float n000=dot(g000,Pf0);float n100=dot(g100,vec3(Pf1.x,Pf0.yz));float n010=dot(g010,vec3(Pf0.x,Pf1.y,Pf0.z));float n110=dot(g110,vec3(Pf1.xy,Pf0.z));float n001=dot(g001,vec3(Pf0.xy,Pf1.z));float n101=dot(g101,vec3(Pf1.x,Pf0.y,Pf1.z));float n011=dot(g011,vec3(Pf0.x,Pf1.yz));float n111=dot(g111,Pf1);vec3 fade_xyz=fade(Pf0);vec4 n_z=mix(vec4(n000,n100,n010,n110),vec4(n001,n101,n011,n111),fade_xyz.z);vec2 n_yz=mix(n_z.xy,n_z.zw,fade_xyz.y);float n_xyz=mix(n_yz.x,n_yz.y,fade_xyz.x);return 2.2*n_xyz;}varying vec3 vNormal;uniform float uTime;uniform float uSpeed;uniform float uNoiseDensity;uniform float uNoiseStrength;uniform float uFrequency;uniform float uAmplitude;varying vec3 vPos;varying float vDistort;varying vec2 vUv;varying vec3 vViewPosition;\n#define STANDARD\n#ifndef FLAT_SHADED\n#ifdef USE_TANGENT\nvarying vec3 vTangent;varying vec3 vBitangent;\n#endif\n#endif\n#include <clipping_planes_pars_vertex>\n#include <color_pars_vertex>\n#include <common>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <skinning_pars_vertex>\n#include <uv2_pars_vertex>\n#include <uv_pars_vertex>\nmat3 rotation3dY(float angle){float s=sin(angle);float c=cos(angle);return mat3(c,0.0,-s,0.0,1.0,0.0,s,0.0,c);}vec3 rotateY(vec3 v,float angle){return rotation3dY(angle)*v;}void main(){\n#include <beginnormal_vertex>\n#include <color_vertex>\n#include <defaultnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <uv2_vertex>\n#include <uv_vertex>\n#ifndef FLAT_SHADED\nvNormal=normalize(transformedNormal);\n#ifdef USE_TANGENT\nvTangent=normalize(transformedTangent);vBitangent=normalize(cross(vNormal,vTangent)*tangent.w);\n#endif\n#endif\n#include <begin_vertex>\n#include <clipping_planes_vertex>\n#include <displacementmap_vertex>\n#include <logdepthbuf_vertex>\n#include <morphtarget_vertex>\n#include <project_vertex>\n#include <skinning_vertex>\nvViewPosition=-mvPosition.xyz;\n#include <fog_vertex>\n#include <shadowmap_vertex>\n#include <worldpos_vertex>\nfloat t=uTime*uSpeed;float distortion=pnoise((normal+t)*uNoiseDensity,vec3(10.0))*uNoiseStrength;vec3 pos=position+(normal*distortion);float angle=sin(uv.y*uFrequency+t)*uAmplitude;pos=rotateY(pos,angle);vPos=pos;vDistort=distortion;vNormal=normal;vUv=uv;gl_Position=projectionMatrix*modelViewMatrix*vec4(pos,1.);}",tb={};C(tb,{fragment:()=>tT,vertex:()=>tz});var tT="\n#define STANDARD\n#ifdef PHYSICAL\n#define REFLECTIVITY\n#define CLEARCOAT\n#define TRANSMISSION\n#endif\nuniform vec3 diffuse;uniform vec3 emissive;uniform float roughness;uniform float metalness;uniform float opacity;\n#ifdef TRANSMISSION\nuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\nuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\nuniform float clearcoat;uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\nuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n#ifdef USE_TANGENT\nvarying vec3 vTangent;varying vec3 vBitangent;\n#endif\n#endif\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <color_pars_fragment>\n#include <common>\n#include <dithering_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <map_pars_fragment>\n#include <packing>\n#include <uv2_pars_fragment>\n#include <uv_pars_fragment>\n#include <bsdfs>\n#include <bumpmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <clipping_planes_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <shadowmap_pars_fragment>\nvarying vec3 vNormal;varying float displacement;varying vec3 vPos;varying float vDistort;uniform float uC1r;uniform float uC1g;uniform float uC1b;uniform float uC2r;uniform float uC2g;uniform float uC2b;uniform float uC3r;uniform float uC3g;uniform float uC3b;varying vec3 color1;varying vec3 color2;varying vec3 color3;float linearToRelativeLuminance2(const in vec3 color){vec3 weights=vec3(0.2126,0.7152,0.0722);return dot(weights,color.rgb);}void main(){vec3 color1=vec3(uC1r,uC1g,uC1b);vec3 color2=vec3(uC2r,uC2g,uC2b);vec3 color3=vec3(uC3r,uC3g,uC3b);float clearcoat=1.0;float clearcoatRoughness=0.5;\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(mix(mix(color1,color2,smoothstep(-3.0,3.0,vPos.x)),color3,vPos.z),1);ReflectedLight reflectedLight=ReflectedLight(vec3(0.0),vec3(0.0),vec3(0.0),vec3(0.0));vec3 totalEmissiveRadiance=emissive;\n#ifdef TRANSMISSION\nfloat totalTransmission=transmission;\n#endif\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <color_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <roughnessmap_fragment>\n#include <metalnessmap_fragment>\n#include <normal_fragment_begin>\n#include <normal_fragment_maps>\n#include <clearcoat_normal_fragment_begin>\n#include <clearcoat_normal_fragment_maps>\n#include <emissivemap_fragment>\n#include <lights_physical_fragment>\n#include <lights_fragment_begin>\n#include <lights_fragment_maps>\n#include <lights_fragment_end>\n#include <aomap_fragment>\nvec3 outgoingLight=reflectedLight.directDiffuse+reflectedLight.indirectDiffuse+reflectedLight.directSpecular+reflectedLight.indirectSpecular;\n#ifdef TRANSMISSION\ndiffuseColor.a*=mix(saturate(1.-totalTransmission+linearToRelativeLuminance2(reflectedLight.directSpecular+reflectedLight.indirectSpecular)),1.0,metalness);\n#endif\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n#include <dithering_fragment>\ngl_FragColor=vec4(outgoingLight,diffuseColor.a);}",tz="vec3 mod289(vec3 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-0.85373472095314*r;}vec3 fade(vec3 t){return t*t*t*(t*(t*6.0-15.0)+10.0);}float cnoise(vec3 P){vec3 Pi0=floor(P);vec3 Pi1=Pi0+vec3(1.0);Pi0=mod289(Pi0);Pi1=mod289(Pi1);vec3 Pf0=fract(P);vec3 Pf1=Pf0-vec3(1.0);vec4 ix=vec4(Pi0.x,Pi1.x,Pi0.x,Pi1.x);vec4 iy=vec4(Pi0.yy,Pi1.yy);vec4 iz0=Pi0.zzzz;vec4 iz1=Pi1.zzzz;vec4 ixy=permute(permute(ix)+iy);vec4 ixy0=permute(ixy+iz0);vec4 ixy1=permute(ixy+iz1);vec4 gx0=ixy0*(1.0/7.0);vec4 gy0=fract(floor(gx0)*(1.0/7.0))-0.5;gx0=fract(gx0);vec4 gz0=vec4(0.5)-abs(gx0)-abs(gy0);vec4 sz0=step(gz0,vec4(0.0));gx0-=sz0*(step(0.0,gx0)-0.5);gy0-=sz0*(step(0.0,gy0)-0.5);vec4 gx1=ixy1*(1.0/7.0);vec4 gy1=fract(floor(gx1)*(1.0/7.0))-0.5;gx1=fract(gx1);vec4 gz1=vec4(0.5)-abs(gx1)-abs(gy1);vec4 sz1=step(gz1,vec4(0.0));gx1-=sz1*(step(0.0,gx1)-0.5);gy1-=sz1*(step(0.0,gy1)-0.5);vec3 g000=vec3(gx0.x,gy0.x,gz0.x);vec3 g100=vec3(gx0.y,gy0.y,gz0.y);vec3 g010=vec3(gx0.z,gy0.z,gz0.z);vec3 g110=vec3(gx0.w,gy0.w,gz0.w);vec3 g001=vec3(gx1.x,gy1.x,gz1.x);vec3 g101=vec3(gx1.y,gy1.y,gz1.y);vec3 g011=vec3(gx1.z,gy1.z,gz1.z);vec3 g111=vec3(gx1.w,gy1.w,gz1.w);vec4 norm0=taylorInvSqrt(vec4(dot(g000,g000),dot(g010,g010),dot(g100,g100),dot(g110,g110)));g000*=norm0.x;g010*=norm0.y;g100*=norm0.z;g110*=norm0.w;vec4 norm1=taylorInvSqrt(vec4(dot(g001,g001),dot(g011,g011),dot(g101,g101),dot(g111,g111)));g001*=norm1.x;g011*=norm1.y;g101*=norm1.z;g111*=norm1.w;float n000=dot(g000,Pf0);float n100=dot(g100,vec3(Pf1.x,Pf0.yz));float n010=dot(g010,vec3(Pf0.x,Pf1.y,Pf0.z));float n110=dot(g110,vec3(Pf1.xy,Pf0.z));float n001=dot(g001,vec3(Pf0.xy,Pf1.z));float n101=dot(g101,vec3(Pf1.x,Pf0.y,Pf1.z));float n011=dot(g011,vec3(Pf0.x,Pf1.yz));float n111=dot(g111,Pf1);vec3 fade_xyz=fade(Pf0);vec4 n_z=mix(vec4(n000,n100,n010,n110),vec4(n001,n101,n011,n111),fade_xyz.z);vec2 n_yz=mix(n_z.xy,n_z.zw,fade_xyz.y);float n_xyz=mix(n_yz.x,n_yz.y,fade_xyz.x);return 2.2*n_xyz;}mat3 rotation3dY(float angle){float s=sin(angle);float c=cos(angle);return mat3(c,0.0,-s,0.0,1.0,0.0,s,0.0,c);}vec3 rotateY(vec3 v,float angle){return rotation3dY(angle)*v;}varying vec3 vNormal;varying float displacement;varying vec3 vPos;varying float vDistort;uniform float uTime;uniform float uSpeed;uniform float uNoiseDensity;uniform float uNoiseStrength;\n#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n#ifdef USE_TANGENT\nvarying vec3 vTangent;varying vec3 vBitangent;\n#endif\n#endif\n#include <clipping_planes_pars_vertex>\n#include <color_pars_vertex>\n#include <common>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <skinning_pars_vertex>\n#include <uv2_pars_vertex>\n#include <uv_pars_vertex>\nvoid main(){\n#include <beginnormal_vertex>\n#include <color_vertex>\n#include <defaultnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <uv2_vertex>\n#include <uv_vertex>\n#ifndef FLAT_SHADED\nvNormal=normalize(transformedNormal);\n#ifdef USE_TANGENT\nvTangent=normalize(transformedTangent);vBitangent=normalize(cross(vNormal,vTangent)*tangent.w);\n#endif\n#endif\n#include <begin_vertex>\n#include <clipping_planes_vertex>\n#include <displacementmap_vertex>\n#include <logdepthbuf_vertex>\n#include <morphtarget_vertex>\n#include <project_vertex>\n#include <skinning_vertex>\nvViewPosition=-mvPosition.xyz;\n#include <fog_vertex>\n#include <shadowmap_vertex>\n#include <worldpos_vertex>\nfloat t=uTime*uSpeed;float distortion=0.75*cnoise(0.43*position*uNoiseDensity+t);vec3 pos=position+normal*distortion*uNoiseStrength;vPos=pos;gl_Position=projectionMatrix*modelViewMatrix*vec4(pos,1.);}",tP={};C(tP,{plane:()=>tC,sphere:()=>tO,waterPlane:()=>tD});var tC={};C(tC,{fragment:()=>tS,vertex:()=>tw});var tS="uniform float uC1r;uniform float uC1g;uniform float uC1b;uniform float uC2r;uniform float uC2g;uniform float uC2b;uniform float uC3r;uniform float uC3g;uniform float uC3b;varying vec3 vNormal;varying vec3 vPos;void main(){vec3 color1=vec3(uC1r,uC1g,uC1b);vec3 color2=vec3(uC2r,uC2g,uC2b);vec3 color3=vec3(uC3r,uC3g,uC3b);gl_FragColor=vec4(color1*vPos.x+color2*vPos.y+color3*vPos.z,1.);}",tw="vec3 mod289(vec3 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-0.85373472095314*r;}vec3 fade(vec3 t){return t*t*t*(t*(t*6.0-15.0)+10.0);}float cnoise(vec3 P){vec3 Pi0=floor(P);vec3 Pi1=Pi0+vec3(1.0);Pi0=mod289(Pi0);Pi1=mod289(Pi1);vec3 Pf0=fract(P);vec3 Pf1=Pf0-vec3(1.0);vec4 ix=vec4(Pi0.x,Pi1.x,Pi0.x,Pi1.x);vec4 iy=vec4(Pi0.yy,Pi1.yy);vec4 iz0=Pi0.zzzz;vec4 iz1=Pi1.zzzz;vec4 ixy=permute(permute(ix)+iy);vec4 ixy0=permute(ixy+iz0);vec4 ixy1=permute(ixy+iz1);vec4 gx0=ixy0*(1.0/7.0);vec4 gy0=fract(floor(gx0)*(1.0/7.0))-0.5;gx0=fract(gx0);vec4 gz0=vec4(0.5)-abs(gx0)-abs(gy0);vec4 sz0=step(gz0,vec4(0.0));gx0-=sz0*(step(0.0,gx0)-0.5);gy0-=sz0*(step(0.0,gy0)-0.5);vec4 gx1=ixy1*(1.0/7.0);vec4 gy1=fract(floor(gx1)*(1.0/7.0))-0.5;gx1=fract(gx1);vec4 gz1=vec4(0.5)-abs(gx1)-abs(gy1);vec4 sz1=step(gz1,vec4(0.0));gx1-=sz1*(step(0.0,gx1)-0.5);gy1-=sz1*(step(0.0,gy1)-0.5);vec3 g000=vec3(gx0.x,gy0.x,gz0.x);vec3 g100=vec3(gx0.y,gy0.y,gz0.y);vec3 g010=vec3(gx0.z,gy0.z,gz0.z);vec3 g110=vec3(gx0.w,gy0.w,gz0.w);vec3 g001=vec3(gx1.x,gy1.x,gz1.x);vec3 g101=vec3(gx1.y,gy1.y,gz1.y);vec3 g011=vec3(gx1.z,gy1.z,gz1.z);vec3 g111=vec3(gx1.w,gy1.w,gz1.w);vec4 norm0=taylorInvSqrt(vec4(dot(g000,g000),dot(g010,g010),dot(g100,g100),dot(g110,g110)));g000*=norm0.x;g010*=norm0.y;g100*=norm0.z;g110*=norm0.w;vec4 norm1=taylorInvSqrt(vec4(dot(g001,g001),dot(g011,g011),dot(g101,g101),dot(g111,g111)));g001*=norm1.x;g011*=norm1.y;g101*=norm1.z;g111*=norm1.w;float n000=dot(g000,Pf0);float n100=dot(g100,vec3(Pf1.x,Pf0.yz));float n010=dot(g010,vec3(Pf0.x,Pf1.y,Pf0.z));float n110=dot(g110,vec3(Pf1.xy,Pf0.z));float n001=dot(g001,vec3(Pf0.xy,Pf1.z));float n101=dot(g101,vec3(Pf1.x,Pf0.y,Pf1.z));float n011=dot(g011,vec3(Pf0.x,Pf1.yz));float n111=dot(g111,Pf1);vec3 fade_xyz=fade(Pf0);vec4 n_z=mix(vec4(n000,n100,n010,n110),vec4(n001,n101,n011,n111),fade_xyz.z);vec2 n_yz=mix(n_z.xy,n_z.zw,fade_xyz.y);float n_xyz=mix(n_yz.x,n_yz.y,fade_xyz.x);return 2.2*n_xyz;}mat3 rotation3dY(float angle){float s=sin(angle);float c=cos(angle);return mat3(c,0.0,-s,0.0,1.0,0.0,s,0.0,c);}vec3 rotateY(vec3 v,float angle){return rotation3dY(angle)*v;}varying vec3 vNormal;varying float displacement;varying vec3 vPos;varying float vDistort;varying vec2 vUv;uniform float uTime;uniform float uSpeed;uniform float uLoadingTime;uniform float uNoiseDensity;uniform float uNoiseStrength;\n#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n#ifdef USE_TANGENT\nvarying vec3 vTangent;varying vec3 vBitangent;\n#endif\n#endif\n#include <clipping_planes_pars_vertex>\n#include <color_pars_vertex>\n#include <common>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <skinning_pars_vertex>\n#include <uv2_pars_vertex>\n#include <uv_pars_vertex>\nvoid main(){\n#include <beginnormal_vertex>\n#include <color_vertex>\n#include <defaultnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <uv2_vertex>\n#include <uv_vertex>\n#ifndef FLAT_SHADED\nvNormal=normalize(transformedNormal);\n#ifdef USE_TANGENT\nvTangent=normalize(transformedTangent);vBitangent=normalize(cross(vNormal,vTangent)*tangent.w);\n#endif\n#endif\n#include <begin_vertex>\n#include <clipping_planes_vertex>\n#include <displacementmap_vertex>\n#include <logdepthbuf_vertex>\n#include <morphtarget_vertex>\n#include <project_vertex>\n#include <skinning_vertex>\nvViewPosition=-mvPosition.xyz;\n#include <fog_vertex>\n#include <shadowmap_vertex>\n#include <worldpos_vertex>\nvUv=uv;float t=uTime*uSpeed;float distortion=0.75*cnoise(0.43*position*uNoiseDensity+t);vec3 pos=position+normal*distortion*uNoiseStrength*uLoadingTime;vPos=pos;gl_Position=projectionMatrix*modelViewMatrix*vec4(pos,1.);}",tO={};C(tO,{fragment:()=>tA,vertex:()=>tL});var tA="\n#define STANDARD\n#ifdef PHYSICAL\n#define REFLECTIVITY\n#define CLEARCOAT\n#define TRANSMISSION\n#endif\nuniform vec3 diffuse;uniform vec3 emissive;uniform float roughness;uniform float metalness;uniform float opacity;\n#ifdef TRANSMISSION\nuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\nuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\nuniform float clearcoat;uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\nuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n#ifdef USE_TANGENT\nvarying vec3 vTangent;varying vec3 vBitangent;\n#endif\n#endif\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <color_pars_fragment>\n#include <common>\n#include <dithering_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <map_pars_fragment>\n#include <packing>\n#include <uv2_pars_fragment>\n#include <uv_pars_fragment>\n#include <bsdfs>\n#include <bumpmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <clipping_planes_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <shadowmap_pars_fragment>\nvarying vec3 vNormal;varying float displacement;varying vec3 vPos;varying float vDistort;uniform float uC1r;uniform float uC1g;uniform float uC1b;uniform float uC2r;uniform float uC2g;uniform float uC2b;uniform float uC3r;uniform float uC3g;uniform float uC3b;varying vec3 color1;varying vec3 color2;varying vec3 color3;varying float distanceToCenter;void main(){vec3 color1=vec3(uC1r,uC1g,uC1b);vec3 color2=vec3(uC2r,uC2g,uC2b);vec3 color3=vec3(uC3r,uC3g,uC3b);float clearcoat=1.0;float clearcoatRoughness=0.5;\n#include <clipping_planes_fragment>\nfloat distanceToCenter=distance(vPos,vec3(0,0,0));vec4 diffuseColor=vec4(mix(color3,mix(color2,color1,smoothstep(-1.0,1.0,vPos.y)),distanceToCenter),1);ReflectedLight reflectedLight=ReflectedLight(vec3(0.0),vec3(0.0),vec3(0.0),vec3(0.0));vec3 totalEmissiveRadiance=emissive;\n#ifdef TRANSMISSION\nfloat totalTransmission=transmission;\n#endif\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <color_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <roughnessmap_fragment>\n#include <metalnessmap_fragment>\n#include <normal_fragment_begin>\n#include <normal_fragment_maps>\n#include <clearcoat_normal_fragment_begin>\n#include <clearcoat_normal_fragment_maps>\n#include <emissivemap_fragment>\n#include <lights_physical_fragment>\n#include <lights_fragment_begin>\n#include <lights_fragment_maps>\n#include <lights_fragment_end>\n#include <aomap_fragment>\nvec3 outgoingLight=reflectedLight.directDiffuse+reflectedLight.indirectDiffuse+reflectedLight.directSpecular+reflectedLight.indirectSpecular;\n#ifdef TRANSMISSION\ndiffuseColor.a*=mix(saturate(1.-totalTransmission+linearToRelativeLuminance(reflectedLight.directSpecular+reflectedLight.indirectSpecular)),1.0,metalness);\n#endif\ngl_FragColor=vec4(outgoingLight,diffuseColor.a);\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n#include <dithering_fragment>\n}",tL="vec3 mod289(vec3 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-0.85373472095314*r;}vec3 fade(vec3 t){return t*t*t*(t*(t*6.0-15.0)+10.0);}float pnoise(vec3 P,vec3 rep){vec3 Pi0=mod(floor(P),rep);vec3 Pi1=mod(Pi0+vec3(1.0),rep);Pi0=mod289(Pi0);Pi1=mod289(Pi1);vec3 Pf0=fract(P);vec3 Pf1=Pf0-vec3(1.0);vec4 ix=vec4(Pi0.x,Pi1.x,Pi0.x,Pi1.x);vec4 iy=vec4(Pi0.yy,Pi1.yy);vec4 iz0=Pi0.zzzz;vec4 iz1=Pi1.zzzz;vec4 ixy=permute(permute(ix)+iy);vec4 ixy0=permute(ixy+iz0);vec4 ixy1=permute(ixy+iz1);vec4 gx0=ixy0*(1.0/7.0);vec4 gy0=fract(floor(gx0)*(1.0/7.0))-0.5;gx0=fract(gx0);vec4 gz0=vec4(0.5)-abs(gx0)-abs(gy0);vec4 sz0=step(gz0,vec4(0.0));gx0-=sz0*(step(0.0,gx0)-0.5);gy0-=sz0*(step(0.0,gy0)-0.5);vec4 gx1=ixy1*(1.0/7.0);vec4 gy1=fract(floor(gx1)*(1.0/7.0))-0.5;gx1=fract(gx1);vec4 gz1=vec4(0.5)-abs(gx1)-abs(gy1);vec4 sz1=step(gz1,vec4(0.0));gx1-=sz1*(step(0.0,gx1)-0.5);gy1-=sz1*(step(0.0,gy1)-0.5);vec3 g000=vec3(gx0.x,gy0.x,gz0.x);vec3 g100=vec3(gx0.y,gy0.y,gz0.y);vec3 g010=vec3(gx0.z,gy0.z,gz0.z);vec3 g110=vec3(gx0.w,gy0.w,gz0.w);vec3 g001=vec3(gx1.x,gy1.x,gz1.x);vec3 g101=vec3(gx1.y,gy1.y,gz1.y);vec3 g011=vec3(gx1.z,gy1.z,gz1.z);vec3 g111=vec3(gx1.w,gy1.w,gz1.w);vec4 norm0=taylorInvSqrt(vec4(dot(g000,g000),dot(g010,g010),dot(g100,g100),dot(g110,g110)));g000*=norm0.x;g010*=norm0.y;g100*=norm0.z;g110*=norm0.w;vec4 norm1=taylorInvSqrt(vec4(dot(g001,g001),dot(g011,g011),dot(g101,g101),dot(g111,g111)));g001*=norm1.x;g011*=norm1.y;g101*=norm1.z;g111*=norm1.w;float n000=dot(g000,Pf0);float n100=dot(g100,vec3(Pf1.x,Pf0.yz));float n010=dot(g010,vec3(Pf0.x,Pf1.y,Pf0.z));float n110=dot(g110,vec3(Pf1.xy,Pf0.z));float n001=dot(g001,vec3(Pf0.xy,Pf1.z));float n101=dot(g101,vec3(Pf1.x,Pf0.y,Pf1.z));float n011=dot(g011,vec3(Pf0.x,Pf1.yz));float n111=dot(g111,Pf1);vec3 fade_xyz=fade(Pf0);vec4 n_z=mix(vec4(n000,n100,n010,n110),vec4(n001,n101,n011,n111),fade_xyz.z);vec2 n_yz=mix(n_z.xy,n_z.zw,fade_xyz.y);float n_xyz=mix(n_yz.x,n_yz.y,fade_xyz.x);return 2.2*n_xyz;}varying vec3 vNormal;uniform float uTime;uniform float uSpeed;uniform float uNoiseDensity;uniform float uNoiseStrength;uniform float uFrequency;uniform float uAmplitude;varying vec3 vPos;varying float vDistort;varying vec2 vUv;varying vec3 vViewPosition;\n#define STANDARD\n#ifndef FLAT_SHADED\n#ifdef USE_TANGENT\nvarying vec3 vTangent;varying vec3 vBitangent;\n#endif\n#endif\n#include <clipping_planes_pars_vertex>\n#include <color_pars_vertex>\n#include <common>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <skinning_pars_vertex>\n#include <uv2_pars_vertex>\n#include <uv_pars_vertex>\nmat3 rotation3dY(float angle){float s=sin(angle);float c=cos(angle);return mat3(c,0.0,-s,0.0,1.0,0.0,s,0.0,c);}vec3 rotateY(vec3 v,float angle){return rotation3dY(angle)*v;}void main(){\n#include <beginnormal_vertex>\n#include <color_vertex>\n#include <defaultnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <uv2_vertex>\n#include <uv_vertex>\n#ifndef FLAT_SHADED\nvNormal=normalize(transformedNormal);\n#ifdef USE_TANGENT\nvTangent=normalize(transformedTangent);vBitangent=normalize(cross(vNormal,vTangent)*tangent.w);\n#endif\n#endif\n#include <begin_vertex>\n#include <clipping_planes_vertex>\n#include <displacementmap_vertex>\n#include <logdepthbuf_vertex>\n#include <morphtarget_vertex>\n#include <project_vertex>\n#include <skinning_vertex>\nvViewPosition=-mvPosition.xyz;\n#include <fog_vertex>\n#include <shadowmap_vertex>\n#include <worldpos_vertex>\nfloat t=uTime*uSpeed;float distortion=pnoise((normal+t)*uNoiseDensity,vec3(10.0))*uNoiseStrength;vec3 pos=position+(normal*distortion);float angle=sin(uv.y*uFrequency+t)*uAmplitude;pos=rotateY(pos,angle);vPos=pos;vDistort=distortion;vNormal=normal;vUv=uv;gl_Position=projectionMatrix*modelViewMatrix*vec4(pos,1.);}",tD={};C(tD,{fragment:()=>tR,vertex:()=>tF});var tR="uniform float uC1r;uniform float uC1g;uniform float uC1b;uniform float uC2r;uniform float uC2g;uniform float uC2b;uniform float uC3r;uniform float uC3g;uniform float uC3b;varying vec3 vNormal;varying vec3 vPos;void main(){vec3 color1=vec3(uC1r,uC1g,uC1b);vec3 color2=vec3(uC2r,uC2g,uC2b);vec3 color3=vec3(uC3r,uC3g,uC3b);gl_FragColor=vec4(color1*vPos.x+color2*vPos.y+color3*vPos.z,1.);}",tF="vec3 mod289(vec3 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-0.85373472095314*r;}vec3 fade(vec3 t){return t*t*t*(t*(t*6.0-15.0)+10.0);}float cnoise(vec3 P){vec3 Pi0=floor(P);vec3 Pi1=Pi0+vec3(1.0);Pi0=mod289(Pi0);Pi1=mod289(Pi1);vec3 Pf0=fract(P);vec3 Pf1=Pf0-vec3(1.0);vec4 ix=vec4(Pi0.x,Pi1.x,Pi0.x,Pi1.x);vec4 iy=vec4(Pi0.yy,Pi1.yy);vec4 iz0=Pi0.zzzz;vec4 iz1=Pi1.zzzz;vec4 ixy=permute(permute(ix)+iy);vec4 ixy0=permute(ixy+iz0);vec4 ixy1=permute(ixy+iz1);vec4 gx0=ixy0*(1.0/7.0);vec4 gy0=fract(floor(gx0)*(1.0/7.0))-0.5;gx0=fract(gx0);vec4 gz0=vec4(0.5)-abs(gx0)-abs(gy0);vec4 sz0=step(gz0,vec4(0.0));gx0-=sz0*(step(0.0,gx0)-0.5);gy0-=sz0*(step(0.0,gy0)-0.5);vec4 gx1=ixy1*(1.0/7.0);vec4 gy1=fract(floor(gx1)*(1.0/7.0))-0.5;gx1=fract(gx1);vec4 gz1=vec4(0.5)-abs(gx1)-abs(gy1);vec4 sz1=step(gz1,vec4(0.0));gx1-=sz1*(step(0.0,gx1)-0.5);gy1-=sz1*(step(0.0,gy1)-0.5);vec3 g000=vec3(gx0.x,gy0.x,gz0.x);vec3 g100=vec3(gx0.y,gy0.y,gz0.y);vec3 g010=vec3(gx0.z,gy0.z,gz0.z);vec3 g110=vec3(gx0.w,gy0.w,gz0.w);vec3 g001=vec3(gx1.x,gy1.x,gz1.x);vec3 g101=vec3(gx1.y,gy1.y,gz1.y);vec3 g011=vec3(gx1.z,gy1.z,gz1.z);vec3 g111=vec3(gx1.w,gy1.w,gz1.w);vec4 norm0=taylorInvSqrt(vec4(dot(g000,g000),dot(g010,g010),dot(g100,g100),dot(g110,g110)));g000*=norm0.x;g010*=norm0.y;g100*=norm0.z;g110*=norm0.w;vec4 norm1=taylorInvSqrt(vec4(dot(g001,g001),dot(g011,g011),dot(g101,g101),dot(g111,g111)));g001*=norm1.x;g011*=norm1.y;g101*=norm1.z;g111*=norm1.w;float n000=dot(g000,Pf0);float n100=dot(g100,vec3(Pf1.x,Pf0.yz));float n010=dot(g010,vec3(Pf0.x,Pf1.y,Pf0.z));float n110=dot(g110,vec3(Pf1.xy,Pf0.z));float n001=dot(g001,vec3(Pf0.xy,Pf1.z));float n101=dot(g101,vec3(Pf1.x,Pf0.y,Pf1.z));float n011=dot(g011,vec3(Pf0.x,Pf1.yz));float n111=dot(g111,Pf1);vec3 fade_xyz=fade(Pf0);vec4 n_z=mix(vec4(n000,n100,n010,n110),vec4(n001,n101,n011,n111),fade_xyz.z);vec2 n_yz=mix(n_z.xy,n_z.zw,fade_xyz.y);float n_xyz=mix(n_yz.x,n_yz.y,fade_xyz.x);return 2.2*n_xyz;}mat3 rotation3dY(float angle){float s=sin(angle);float c=cos(angle);return mat3(c,0.0,-s,0.0,1.0,0.0,s,0.0,c);}vec3 rotateY(vec3 v,float angle){return rotation3dY(angle)*v;}varying vec3 vNormal;varying float displacement;varying vec3 vPos;varying float vDistort;varying vec2 vUv;uniform float uTime;uniform float uSpeed;uniform float uLoadingTime;uniform float uNoiseDensity;uniform float uNoiseStrength;\n#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n#ifdef USE_TANGENT\nvarying vec3 vTangent;varying vec3 vBitangent;\n#endif\n#endif\n#include <clipping_planes_pars_vertex>\n#include <color_pars_vertex>\n#include <common>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <skinning_pars_vertex>\n#include <uv2_pars_vertex>\n#include <uv_pars_vertex>\nvoid main(){\n#include <beginnormal_vertex>\n#include <color_vertex>\n#include <defaultnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <uv2_vertex>\n#include <uv_vertex>\n#ifndef FLAT_SHADED\nvNormal=normalize(transformedNormal);\n#ifdef USE_TANGENT\nvTangent=normalize(transformedTangent);vBitangent=normalize(cross(vNormal,vTangent)*tangent.w);\n#endif\n#endif\n#include <begin_vertex>\n#include <clipping_planes_vertex>\n#include <displacementmap_vertex>\n#include <logdepthbuf_vertex>\n#include <morphtarget_vertex>\n#include <project_vertex>\n#include <skinning_vertex>\nvViewPosition=-mvPosition.xyz;\n#include <fog_vertex>\n#include <shadowmap_vertex>\n#include <worldpos_vertex>\nvUv=uv;float t=uTime*uSpeed;float distortion=0.75*cnoise(0.43*position*uNoiseDensity+t);vec3 pos=position+normal*distortion*uNoiseStrength*uLoadingTime;vPos=pos;gl_Position=projectionMatrix*modelViewMatrix*vec4(pos,1.);}",{to:tN,rotDur:tU,meshDur:tI,rotDelay:tM,meshDelay:tk}={meshDelay:0,meshDur:0,rotDelay:1.7,rotDur:1,posDelay:1.3,posDur:2.2,logoTransition:3.1,text:2.5,to:1},tH=new l.Clock;Math.easeInOutCubic=function(e,t,n,i){return(e/=i/2)<1?n/2*e*e*e+t:n/2*((e-=2)*e*e+2)+t};var tj=e=>{let{type:t,animate:n,range:i,rangeStart:r,rangeEnd:a,uTime:u,uSpeed:h,uStrength:f,uDensity:m,uFrequency:g,uAmplitude:p,positionX:v,positionY:_,positionZ:y,rotationX:x,rotationY:E,rotationZ:T,color1:z,color2:P,color3:C,reflection:w,wireframe:O,shader:A,rotSpringOption:L=e=>{let{rotation:t}=e;return{to:(e,n)=>S(void 0,null,function*(){yield e({animatedRotation:t})}),from:{rotation:tt([0,0,0])},config:{duration:300}}},posSpringOption:D=e=>{let{position:t}=e;return{to:(e,n)=>S(void 0,null,function*(){yield e({animatedPosition:t})}),from:{position:[0,0,0]},config:{duration:300}}}}=e,R=function(e){var t,n,i,r,a,s,d;let{type:u,shader:h,color1:f,color2:m,color3:g,uTime:p,uSpeed:v,uDensity:_,uStrength:y,uFrequency:x,uAmplitude:E}=e,[T,z]=(0,o.useState)(!1),P=null!=u?u:"plane",C=tg[P];h&&"defaults"!==h&&(C=tm[h][P]);let S=(t={colors:[f,m,g],uTime:p,uSpeed:v,uLoadingTime:0,uNoiseDensity:_,uNoiseStrength:y,uFrequency:x,uAmplitude:E,uIntensity:.5},n=C.vertex,i=C.fragment,class extends l.MeshPhysicalMaterial{constructor(){let e=Object.entries(t),a=t.colors,o=th(a[0]),s=th(a[1]),c=th(a[2]),d={uC1r:{value:tf(null==o?void 0:o.r)},uC1g:{value:tf(null==o?void 0:o.g)},uC1b:{value:tf(null==o?void 0:o.b)},uC2r:{value:tf(null==s?void 0:s.r)},uC2g:{value:tf(null==s?void 0:s.g)},uC2b:{value:tf(null==s?void 0:s.b)},uC3r:{value:tf(null==c?void 0:c.r)},uC3g:{value:tf(null==c?void 0:c.g)},uC3b:{value:tf(null==c?void 0:c.b)}},u=e.reduce((e,t)=>{let[n,i]=t,r=l.UniformsUtils.clone({[n]:{value:i}});return b(b({},e),r)},{});super({metalness:.2,userData:u,side:l.DoubleSide,onBeforeCompile:e=>{e.uniforms=b(b(b({},e.uniforms),u),d),e.vertexShader=n,e.fragmentShader=i}}),e.forEach(e=>{let[t]=e;return Object.defineProperty(this,t,{get:()=>this.uniforms[t].value,set:e=>this.uniforms[t].value=e})}),r&&r(this)}}),w=(a={uTime:p,uSpeed:v,uNoiseDensity:_,uNoiseStrength:y,uFrequency:x,uAmplitude:E,uIntensity:.5},s=C.vertex,class extends l.LineBasicMaterial{constructor(){let e=Object.entries(a),t=e.reduce((e,t)=>{let[n,i]=t,r=l.UniformsUtils.clone({[n]:{value:i}});return b(b({},e),r)},{});super({color:"#ffffff",linewidth:5,userData:t,onBeforeCompile:e=>{e.uniforms=b(b({},e.uniforms),t),e.vertexShader=s}}),e.forEach(e=>{let[t]=e;return Object.defineProperty(this,t,{get:()=>this.uniforms[t].value,set:e=>this.uniforms[t].value=e})}),d&&d(this)}});return(0,c.e)({ColorShiftMaterial:S}),(0,c.e)({HoveredLineMaterial:w}),(0,o.useEffect)(()=>{z(!0)},[]),T}({type:t,shader:A,color1:z,color2:P,color3:C,uTime:u,uSpeed:h,uDensity:m,uStrength:f,uFrequency:g,uAmplitude:p}),{material:F,linemat:N}=function(e){let{animate:t,range:n,rangeStart:i,rangeEnd:r}=e,a=(0,o.useRef)(),s=(0,o.useRef)(),l=0;return(0,c.C)((e,o)=>{if(a.current){let e=tH.getElapsedTime();if("enabled"===n&&(e=i+tH.getElapsedTime())>=r&&(e=i,tH.start()),e>tk){let t=a.current.userData.uLoadingTime.value,n=e<tI+tk?Math.easeInOutCubic(l,t,tN-t,1e3*tI):tN;a.current.userData.uLoadingTime.value=n,e<tI+tk&&(l+=20)}"on"===t&&(a.current.userData.uTime.value=e,void 0!==s.current&&(s.current.userData.uTime.value=e))}}),{material:a,linemat:s}}({animate:n,range:i,rangeStart:r,rangeEnd:a}),U=[v,_,y],I=tt([x,E,T]),{animatedPosition:M}=(0,d.useSpring)(D({position:U})),{animatedRotation:k}=(0,d.useSpring)(L({rotation:I}));return(0,s.jsxs)("group",{children:[(0,s.jsxs)(d.animated.mesh,{position:M,rotation:k,name:"shadergradient-mesh",children:["plane"===t&&(0,s.jsx)("planeGeometry",{args:[10,10,1,192]}),"sphere"===t&&(0,s.jsx)("icosahedronGeometry",{args:[1,64]}),"waterPlane"===t&&(0,s.jsx)("planeGeometry",{args:[10,10,192,192]}),R&&(0,s.jsx)("colorShiftMaterial",{ref:F,roughness:1-w})]}),(0,s.jsx)("mesh",{children:(0,s.jsxs)("lineSegments",{renderOrder:1,position:U,rotation:I,visible:!1,children:["plane"===t&&(0,s.jsx)("planeGeometry",{args:[10,10,1,36]}),"sphere"===t&&(0,s.jsx)("icosahedronGeometry",{args:[1,12]}),"waterPlane"===t&&(0,s.jsx)("planeGeometry",{args:[10,10,36,36]}),R&&(0,s.jsx)("hoveredLineMaterial",{ref:N})]})})]})},tB=(r=null!=(i=D())?u(_(i)):{},((e,t,n,i)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let n of p(t))y.call(e,n)||void 0===n||h(e,n,{get:()=>t[n],enumerable:!(i=m(t,n))||i.enumerable});return e})(i&&i.__esModule?r:h(r,"default",{value:i,enumerable:!0}),i)),tY=tB.parse(tn("?range=enabled&rangeStart=0&rangeEnd=40&frameRate=10&destination=onCanvas&format=gif&animate=on&axesHelper=off&brightness=1.2&cAzimuthAngle=180&cDistance=3.6&cPolarAngle=90&cameraZoom=1&color1=%23ff5005&color2=%23dbba95&color3=%23d0bce1&embedMode=off&envPreset=city&gizmoHelper=hide&grain=on&lightType=3d&pixelDensity=1&fov=45&positionX=-1.4&positionY=0&positionZ=0&reflection=0.1&rotationX=0&rotationY=10&rotationZ=50&shader=defaults&type=plane&uDensity=1.3&uSpeed=0.4&uStrength=4&uTime=0&uFrequency=5.5&wireframe=false"),{parseNumbers:!0,parseBooleans:!0,arrayFormat:"index"});function tV(e){var{control:t="props",dampingFactor:n,rotSpringOption:i,posSpringOption:r,isFigmaPlugin:a=!1,enableTransition:l=!0}=e,d=z(e,["control","dampingFactor","rotSpringOption","posSpringOption","isFigmaPlugin","enableTransition"]);let u=b(b({},tY),d);"query"===t&&(u=tB.parse(tn(d.urlString),{parseNumbers:!0,parseBooleans:!0,arrayFormat:"index"}));let h=u,{lightType:f,envPreset:m,brightness:g,grain:p,grainBlending:v,toggleAxis:_}=h,y=z(h,["lightType","envPreset","brightness","grain","grainBlending","toggleAxis"]);return function(e,t){let{gl:n,scene:i,camera:r,size:a}=(0,c.A)(),s=(0,o.useMemo)(()=>{let o=new Z(n);o.addPass(new Q(i,r));let s=new er(a.width,a.height,{shape:1,radius:2,rotateR:Math.PI/12,rotateB:Math.PI/12*2,rotateG:Math.PI/12*3,scatter:1,blending:t,blendingMode:1,greyscale:!1,disable:e});return o.addPass(s),o},[n,i,r,a,e,t]);(0,o.useEffect)(()=>null==s?void 0:s.setSize(a.width,a.height),[s,a]),(0,c.C)((e,t)=>(n.autoClear=!0,void s.render(t)),1)}("off"===p,v||1),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(td,{lightType:f,brightness:g,envPreset:m}),(0,s.jsx)(tj,T(b({},y),{rotSpringOption:i,posSpringOption:r}),JSON.stringify(y)),_&&(0,s.jsx)(eE,{isFigmaPlugin:a}),(0,s.jsx)(ti,b({dampingFactor:n,enableTransition:l},y))]})}/*! Bundled license information:

camera-controls/dist/camera-controls.module.js:
  (*!
   * camera-controls
   * https://github.com/yomotsu/camera-controls
   * (c) 2017 @yomotsu
   * Released under the MIT License.
   *)
*/}}]);